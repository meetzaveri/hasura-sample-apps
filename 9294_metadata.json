{
  "actions": [
    {
      "comment": "GetCriteriaStatuses",
      "definition": {
        "arguments": [
          { "name": "params", "type": "InterpretativeCriteriaPayload" }
        ],
        "handler": "http://host.docker.internal:3333/criteria/status",
        "kind": "synchronous",
        "output_type": "[InterpretativeCriteriaResult]",
        "type": "mutation"
      },
      "name": "GetCriteriaStatuses"
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "AddPersonPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-party/v1/person/create",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "PersonResponse!",
        "type": "mutation"
      },
      "name": "addPerson",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "checkEmailPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/check-email",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "checkEmailResponse",
        "type": "mutation"
      },
      "name": "checkEmail",
      "permissions": [
        { "role": "guest-svc" },
        { "role": "custselfreg-register" }
      ]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "CheckNpayEligibilityPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/check-npay-eligibility",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "CheckNpayEligibilityResponse",
        "type": "query"
      },
      "name": "checkNpayEligibility",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "CreateCustomerLoginPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/create",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "Auth0User",
        "type": "mutation"
      },
      "name": "createCustomerLogin",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          {
            "name": "payload",
            "type": "CreateCustomerSelfRegisterLoginPayload!"
          }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/self-register/create",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "CreateCustomerSelfRegisterLoginResponse",
        "type": "mutation"
      },
      "name": "createCustomerSelfRegisterLogin",
      "permissions": [{ "role": "staff" }, { "role": "guest-svc" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "CreateIdentityPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-identity/v1/identity/create",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "UserIdentity",
        "type": "mutation"
      },
      "name": "createIdentity",
      "permissions": [{ "role": "staff" }, { "role": "nutrien-services-m2m" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "DeactivatePersonPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-party/v1/person/deactivate",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "PersonResponse!",
        "type": "mutation"
      },
      "name": "deactivatePerson",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "DeleteCustomerAccountsPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/delete/customer-accounts",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "localHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "[DeleteCustomerAccountsResponse]",
        "type": "mutation"
      },
      "name": "deleteCustomerAccounts",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "DelinkOrganisationPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-party/v1/person/organisation/delink",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "PersonResponse!",
        "type": "mutation"
      },
      "name": "delinkOrganisation",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          {
            "name": "payload",
            "type": "CreateCustomerSelfRegisterLoginPayload!"
          }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/self-register/email-support",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "EmailSupportNonWhiteListedCustomersResponse",
        "type": "mutation"
      },
      "name": "emailSupportNonWhiteListedCustomers",
      "permissions": [{ "role": "staff" }, { "role": "guest-svc" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GenerateSelfRegLinkPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/link-generator/cust-self-reg",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "GenerateSelfRegLinkResponse",
        "type": "mutation"
      },
      "name": "generateSelfRegLink",
      "permissions": [{ "role": "staff" }, { "role": "nutrien-services-m2m" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetAccountSummarySplitUpPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/getAccountSummarySplitUp",
        "output_type": "[GetAccountSummarySplitUpResponse!]",
        "type": "query"
      },
      "name": "getAccountSummarySplitUp",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetAccountsSummaryPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/getAccountsSummary",
        "output_type": "[GetAccountsSummaryResponse]",
        "type": "query"
      },
      "name": "getAccountsSummary",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetBannerPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/banner/get-banner",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "GetBannerResponse",
        "type": "query"
      },
      "name": "getBanner",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetCustomerLatestVerificationPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/get/latest-verification",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "GetCustomerLatestVerificationResponse",
        "type": "query"
      },
      "name": "getCustomerLatestVerification",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetCustomerLoginPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/get",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "Auth0User",
        "type": "query"
      },
      "name": "getCustomerLogin",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/v1/healthcheck",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "GetDbHealthCheckResponse",
        "type": "query"
      },
      "name": "getDbHealthCheck",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetDocumentByIdPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/getDocumentById",
        "output_type": "GetDocumentByIdResponse",
        "type": "query"
      },
      "name": "getDocumentById",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetFinancialAccountSummaryPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/account/getAccountSummary",
        "output_type": "GetFinancialAccountSummaryResponse",
        "type": "query"
      },
      "name": "getFinancialAccountSummary",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [
          {
            "name": "payload",
            "type": "GetFinancialAccountSummarySplitUpPayload!"
          }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/account/getAccountSummarySplitUp",
        "output_type": "[GetFinancialAccountSummarySplitUpResponse!]",
        "type": "query"
      },
      "name": "getFinancialAccountSummarySplitUp",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "accountNumbers", "type": "[String!]" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/account/getAccountType",
        "output_type": "[GetFinancialAccountTypesOutput]",
        "type": "query"
      },
      "name": "getFinancialAccountTypes",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetFinancialAccountsSummaryPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/account/getAccountsSummary",
        "output_type": "[GetFinancialAccountsSummaryResponse]",
        "type": "query"
      },
      "name": "getFinancialAccountsSummary",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetIdentityPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-identity/v1/identity/get",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "output_type": "UserIdentity",
        "type": "query"
      },
      "name": "getIdentity",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetJobPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/get-job",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "Auth0Job",
        "type": "query"
      },
      "name": "getJob",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetLineItemsPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/getLineItems",
        "output_type": "[GetLineItemsResponse!]",
        "type": "query"
      },
      "name": "getLineItems",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetLotDetailsPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/getLotDetails",
        "output_type": "[GetLotDetailsResponse!]",
        "type": "query"
      },
      "name": "getLotDetails",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetPasswordResetTicketPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-identity/v1/identity/get-password-reset-ticket",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "GetPasswordResetTicketResponse",
        "type": "mutation"
      },
      "name": "getPasswordResetTicket",
      "permissions": [{ "role": "auth0-hook" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetPdfPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/getPdf",
        "output_type": "GetPdfResponse",
        "type": "query"
      },
      "name": "getPdf",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetPdfZipPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/getPdfZip",
        "kind": "asynchronous",
        "output_type": "GetPdfZipResponse",
        "timeout": 900,
        "type": "mutation"
      },
      "name": "getPdfZip",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "GetRegistrationStatusPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/get-registration-status",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "[GetRegistrationStatusResponse]",
        "type": "query"
      },
      "name": "getRegistrationStatus",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          {
            "name": "payload",
            "type": "GetRegistrationStatusTotalItemsPayload!"
          }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/get-registration-status-total-items",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "GetRegistrationStatusTotalItemsResponse",
        "type": "query"
      },
      "name": "getRegistrationStatusTotalItems",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "GetSendInvitePayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/send-invite",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "GetSendInviteResponse",
        "type": "mutation"
      },
      "name": "getSendInvite",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "InsertCustomerAccountsPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/insert/customer-accounts",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "localHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "[InsertCustomerAccountsResponse]",
        "type": "mutation"
      },
      "name": "insertCustomerAccounts",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "InsertProfilePayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/insert",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "ProfileMutationResponse",
        "type": "mutation"
      },
      "name": "insertProfile",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "LinkOrganisationPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-party/v1/person/organisation/link",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "PersonResponse!",
        "type": "mutation"
      },
      "name": "linkOrganisation",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "CardPaymentRequestPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/payment/makeCardPayment",
        "kind": "synchronous",
        "output_type": "MakePaymentCardResponse",
        "timeout": 180,
        "type": "mutation"
      },
      "name": "makeCardPayment",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "DirectDebitPaymentRequestPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/payment/makeDirectDebitPayment",
        "kind": "synchronous",
        "output_type": "MakePaymentDirectDebitResponse",
        "timeout": 180,
        "type": "mutation"
      },
      "name": "makeDirectDebitPayment",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "PostSegmentPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/post-segment",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "output_type": "PostSegmentResponse",
        "type": "query"
      },
      "name": "postSegment",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "ReactivatePersonPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-party/v1/person/reactivate",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "PersonResponse!",
        "type": "mutation"
      },
      "name": "reactivatePerson",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "RegisterPersonPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-party/v1/person/register",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "PersonResponse!",
        "type": "mutation"
      },
      "name": "registerPerson",
      "permissions": [{ "role": "custselfreg-register" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "RegisterTOUPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/register-tou",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "RegisterTOUResponse",
        "type": "mutation"
      },
      "name": "registerTOU",
      "permissions": [
        { "role": "user" },
        { "role": "unauthenticated_tou_accept" },
        { "role": "nutrien-services-m2m" }
      ]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "RegisterTcNpaySAPPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/register-tc-npay-sap",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "RegisterTcNpaySAPResponse",
        "type": "mutation"
      },
      "name": "registerTcNpaySAP",
      "permissions": [{ "role": "user" }, { "role": "nutrien-services-m2m" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "ResendCustomerVerificationPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/customer-login/resend-verification",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "Auth0Job",
        "type": "mutation"
      },
      "name": "resendCustomerVerification",
      "permissions": [{ "role": "auth0-hook" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "RetryThirdPartyCallPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/retry-third-party-call",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "RetryThirdPartyCallResponse",
        "type": "mutation"
      },
      "name": "retryThirdPartyCall",
      "permissions": [{ "role": "nutrien-services-m2m" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "SearchDocumentsPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/searchDocuments",
        "output_type": "[SearchDocumentsResponse]",
        "type": "query"
      },
      "name": "searchDocuments",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "SearchInvoicesPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/invoice/searchInvoices",
        "output_type": "[SearchInvoicesResponse]",
        "type": "query"
      },
      "name": "searchInvoices",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "sendInviteEmailPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/send-invite-email",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "sendInviteEmailResponse",
        "type": "mutation"
      },
      "name": "sendInviteEmail",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "SendOptOutNpayEmailPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/send-opt-out-npay-email",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "SendOptOutNpayEmailResponse",
        "type": "mutation"
      },
      "name": "sendOptOutNpayEmail",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          {
            "name": "payload",
            "type": "[SetInvoicePreferredPaymentDatePayload!]"
          }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-finance/v1/invoice/setPreferredPaymentDate",
        "kind": "synchronous",
        "output_type": "[String!]",
        "type": "mutation"
      },
      "name": "setInvoicePreferredPaymentDate",
      "permissions": [{ "role": "staff" }, { "role": "user" }]
    },
    {
      "definition": {
        "arguments": [
          {
            "name": "payload",
            "type": "TestEnablerCreateWhitelistRecordPayload!"
          }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/test-enabler/create-whitelist-record",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "TestEnablerCreateWhitelistRecordResponse",
        "type": "mutation"
      },
      "name": "testEnablerCreateWhitelistRecord",
      "permissions": [{ "role": "test-enabler-svc" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "UpdateIdentityPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-identity/v1/identity/update",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "UserIdentity",
        "type": "mutation"
      },
      "name": "updateIdentity",
      "permissions": [{ "role": "nutrien-services-m2m" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "UpdateNotificationsActivePayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-notifications/v1/notification/notifications-active/update",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "NotificationsActiveMutationResponse",
        "type": "mutation"
      },
      "name": "updateNotificationsActive",
      "permissions": [{ "role": "user" }, { "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [
          { "name": "payload", "type": "UpdateNutrienTokenPayload!" }
        ],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-user-context/v1/context/update-nutrien-token",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "UpdateNutrienTokenResponse",
        "type": "mutation"
      },
      "name": "updateNutrienToken",
      "permissions": [{ "role": "nutrien-services-m2m" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "UpdatePersonPayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-service-party/v1/person/update",
        "headers": [{ "name": "handler", "value": "__REDACTED__" }],
        "kind": "synchronous",
        "output_type": "PersonResponse!",
        "type": "mutation"
      },
      "name": "updatePerson",
      "permissions": [{ "role": "staff" }]
    },
    {
      "definition": {
        "arguments": [{ "name": "payload", "type": "UpdateProfilePayload!" }],
        "forward_client_headers": true,
        "handler": "{{API_BASE_URL}}/au-customer-domain/v1/customer/update",
        "headers": [
          { "name": "handler", "value": "__REDACTED__" },
          { "name": "dockerHandler", "value": "__REDACTED__" }
        ],
        "kind": "synchronous",
        "output_type": "ProfileMutationResponse",
        "type": "mutation"
      },
      "name": "updateProfile",
      "permissions": [
        { "role": "auth0-hook" },
        { "role": "user" },
        { "role": "staff" }
      ]
    }
  ],
  "allowlist": [
    { "collection": "allowed-queries", "scope": { "global": true } }
  ],
  "cron_triggers": [
    {
      "comment": "Cron job to retry when there are 3rd party outages",
      "include_in_metadata": true,
      "name": "cron-retry-npay-offer-sap",
      "payload": { "context_type": "sap_call" },
      "retry_conf": {
        "num_retries": 2,
        "retry_interval_seconds": 120,
        "timeout_seconds": 30,
        "tolerance_seconds": 21600
      },
      "schedule": "0 * * * *",
      "webhook": "{{API_BASE_URL}}/au-service-user-context/v1/context/cron-retry-third-party-call"
    }
  ],
  "custom_types": {
    "enums": [
      {
        "name": "DocumentType",
        "values": [{ "value": "invoice" }, { "value": "statement" }]
      },
      {
        "name": "DocumentAccountType",
        "values": [{ "value": "STOREDOCS" }, { "value": "PLASMA" }]
      },
      {
        "name": "TxnStatus",
        "values": [
          { "value": "ALLOCATED" },
          { "value": "UNALLOCATED" },
          { "value": "OVERDUE" },
          { "value": "PAID" },
          { "value": "UNPAID" },
          { "value": "NPAY_EXTENDED" },
          { "value": "NPAY_PAID" },
          { "value": "NPAY_OVERDUE" },
          { "value": "NPAY_NOT_AVAILABLE" }
        ]
      },
      {
        "name": "TxnType",
        "values": [
          { "value": "INTEREST" },
          { "value": "PAYMENT" },
          { "value": "PENALTY" },
          { "value": "REWARD" },
          { "value": "OTHERS" }
        ]
      },
      {
        "name": "SplitUpDocumentNPayStatus",
        "values": [
          { "value": "Eligible" },
          { "value": "Extended" },
          { "value": "EndOfExtension" }
        ]
      },
      {
        "name": "SplitUpResponseItemStatus",
        "values": [
          { "value": "OverDue" },
          { "value": "Extended" },
          { "value": "NextDue" },
          { "value": "FutureDue" }
        ]
      },
      {
        "name": "GroupByType",
        "values": [
          { "value": "INTEREST" },
          { "value": "INVOICE" },
          { "value": "LIVESTOCK" },
          { "value": "CLEARING" }
        ]
      },
      { "name": "BannerId", "values": [{ "value": "NPAY" }] },
      {
        "name": "NPayBannerType",
        "values": [
          { "value": "NPAY_OFFER" },
          { "value": "NPAY_ACTIVATED" },
          { "value": "NPAY_IN_PROGRESS" },
          { "value": "NONE" }
        ]
      },
      {
        "name": "RoleTypes",
        "values": [
          { "value": "ASSOCIATE" },
          { "value": "ORGANISATION_REPRESENTATIVE" },
          { "value": "ORGANISATION_DELEGATE" }
        ]
      },
      { "name": "ResourceTypes", "values": [{ "value": "ACCOUNT" }] },
      { "name": "PermissionTypes", "values": [{ "value": "VIEW_ONLY" }] }
    ],
    "input_objects": [
      {
        "fields": [
          { "name": "email", "type": "String" },
          { "name": "given_name", "type": "String" },
          { "name": "family_name", "type": "String" },
          { "name": "mobile_phone", "type": "String" },
          { "name": "abn", "type": "String" }
        ],
        "name": "CreateCustomerSelfRegisterLoginPayload"
      },
      {
        "fields": [
          { "name": "abn", "type": "String!" },
          { "name": "account_number", "type": "String!" }
        ],
        "name": "TestEnablerCreateWhitelistRecordPayload"
      },
      {
        "fields": [{ "name": "customer_id", "type": "uuid" }],
        "name": "CreateCustomerLoginPayload"
      },
      {
        "fields": [{ "name": "customer_id", "type": "uuid" }],
        "name": "GetCustomerLoginPayload"
      },
      {
        "fields": [{ "name": "customer_id", "type": "uuid" }],
        "name": "GetCustomerLatestVerificationPayload"
      },
      {
        "fields": [{ "name": "customer_id", "type": "uuid" }],
        "name": "ResendCustomerVerificationPayload"
      },
      {
        "fields": [{ "name": "job_id", "type": "String" }],
        "name": "GetJobPayload"
      },
      {
        "fields": [
          { "name": "id", "type": "String" },
          { "name": "auth_id", "type": "String" },
          { "name": "preferred_branch_code", "type": "String" },
          { "name": "onboarded_branch_code", "type": "String" },
          { "name": "preferred_name", "type": "String" },
          { "name": "given_name", "type": "String" },
          { "name": "family_name", "type": "String" },
          { "name": "full_name", "type": "String" },
          { "name": "mobile_phone", "type": "String" }
        ],
        "name": "UpdateProfilePayload"
      },
      {
        "fields": [
          { "name": "email", "type": "String" },
          { "name": "preferred_branch_code", "type": "String" },
          { "name": "onboarded_branch_code", "type": "String" },
          { "name": "onboarded_channel", "type": "String" },
          { "name": "preferred_name", "type": "String" },
          { "name": "given_name", "type": "String" },
          { "name": "family_name", "type": "String" },
          { "name": "full_name", "type": "String" },
          { "name": "mobile_phone", "type": "String" }
        ],
        "name": "InsertProfilePayload"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "String!" },
          { "name": "CompanyCode", "type": "String" },
          { "name": "FromDate", "type": "String!" },
          { "name": "ToDate", "type": "String!" },
          { "name": "RuralcoAccNumber", "type": "String" }
        ],
        "name": "GetLineItemsPayload"
      },
      {
        "fields": [
          { "name": "accountNumber", "type": "String!" },
          { "name": "documentNumbers", "type": "[String!]" }
        ],
        "name": "GetLotDetailsPayload"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "String!" },
          { "name": "CompanyCode", "type": "String!" }
        ],
        "name": "GetAccountSummaryPayload"
      },
      {
        "fields": [
          { "name": "SearchTerms", "type": "[GetAccountSummaryPayload!]" }
        ],
        "name": "GetAccountsSummaryPayload"
      },
      {
        "fields": [
          { "name": "Accounts", "type": "[AccountSummarySplitUpPayload!]" }
        ],
        "name": "GetAccountSummarySplitUpPayload"
      },
      {
        "fields": [{ "name": "customer_id", "type": "uuid!" }],
        "name": "GetSendInvitePayload"
      },
      {
        "fields": [
          { "name": "accountId", "type": "String!" },
          { "name": "type", "type": "String!" },
          { "name": "fromDate", "type": "date!" },
          { "name": "toDate", "type": "date!" }
        ],
        "name": "GetDocumentsPayload"
      },
      {
        "fields": [
          { "name": "accountId", "type": "String!" },
          { "name": "type", "type": "String!" },
          { "name": "documentId", "type": "String!" }
        ],
        "name": "GetDocumentUrlPayload"
      },
      {
        "fields": [
          { "name": "accountNumber", "type": "String!" },
          { "name": "accountType", "type": "DocumentAccountType" },
          { "name": "documentType", "type": "DocumentType!" },
          { "name": "documentNumber", "type": "String" },
          { "name": "fromDate", "type": "String" },
          { "name": "toDate", "type": "String" },
          { "name": "maxResults", "type": "Int" },
          { "name": "ruralcoAccNumber", "type": "String" }
        ],
        "name": "SearchDocumentsPayload"
      },
      {
        "fields": [
          { "name": "accountNumber", "type": "String!" },
          { "name": "accountType", "type": "DocumentAccountType!" },
          { "name": "documentId", "type": "String!" },
          { "name": "documentNumber", "type": "String" }
        ],
        "name": "GetDocumentByIdPayload"
      },
      {
        "fields": [
          { "name": "accountNumber", "type": "String!" },
          { "name": "accountType", "type": "String!" },
          { "name": "documentId", "type": "String!" },
          { "name": "documentNumber", "type": "String" }
        ],
        "name": "GetPdfPayload"
      },
      {
        "fields": [
          { "name": "accountNumber", "type": "String!" },
          { "name": "ruralcoAccNumber", "type": "String" },
          { "name": "fromDate", "type": "String!" },
          { "name": "toDate", "type": "String!" },
          { "name": "documentNumbers", "type": "[String]!" }
        ],
        "name": "GetPdfZipPayload"
      },
      {
        "fields": [
          { "name": "customer_id", "type": "uuid!" },
          { "name": "account_ids", "type": "[String]!" }
        ],
        "name": "InsertCustomerAccountsPayload"
      },
      {
        "fields": [
          { "name": "customer_id", "type": "uuid!" },
          { "name": "account_ids", "type": "[String]!" }
        ],
        "name": "DeleteCustomerAccountsPayload"
      },
      {
        "fields": [
          { "name": "sort", "type": "[String]!" },
          { "name": "direction", "type": "String" },
          { "name": "filters", "type": "json" },
          { "name": "page", "type": "Int!" },
          { "name": "limit", "type": "Int!" }
        ],
        "name": "GetRegistrationStatusPayload"
      },
      {
        "fields": [{ "name": "filters", "type": "json" }],
        "name": "GetRegistrationStatusTotalItemsPayload"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "String!" },
          { "name": "AccountType", "type": "String!" },
          { "name": "CompanyCode", "type": "String!" }
        ],
        "name": "AccountSummarySplitUpPayload"
      },
      {
        "fields": [
          { "name": "email", "type": "String!" },
          { "name": "partyId", "type": "String!" },
          { "name": "password", "type": "String" },
          { "name": "mfaRequired", "type": "Boolean" }
        ],
        "name": "CreateIdentityPayload"
      },
      {
        "fields": [{ "name": "partyId", "type": "String!" }],
        "name": "GetIdentityPayload"
      },
      {
        "fields": [{ "name": "partyId", "type": "String!" }],
        "name": "GetPasswordResetTicketPayload"
      },
      {
        "fields": [
          { "name": "partyId", "type": "String!" },
          { "name": "properties", "type": "UpdateIdentityPropertiesPayload" }
        ],
        "name": "UpdateIdentityPayload"
      },
      {
        "fields": [
          { "name": "blocked", "type": "Boolean" },
          { "name": "user_metadata", "type": "UserIdentityMetadata" }
        ],
        "name": "UpdateIdentityPropertiesPayload"
      },
      {
        "fields": [
          { "name": "party_id", "type": "uuid" },
          { "name": "token", "type": "String" }
        ],
        "name": "RegisterTOUPayload"
      },
      {
        "fields": [{ "name": "uci_list", "type": "[String]!" }],
        "name": "SendOptOutNpayEmailPayload"
      },
      {
        "fields": [
          { "name": "party_id", "type": "uuid!" },
          { "name": "email", "type": "String" },
          { "name": "identifier", "type": "String!" },
          { "name": "used_date", "type": "String" }
        ],
        "name": "UpdateNutrienTokenPayload"
      },
      {
        "fields": [{ "name": "email", "type": "String!" }],
        "name": "checkEmailPayload"
      },
      {
        "fields": [
          { "name": "email", "type": "String!" },
          { "name": "name", "type": "String" }
        ],
        "name": "sendInvitePeople"
      },
      {
        "fields": [{ "name": "people", "type": "[sendInvitePeople]!" }],
        "name": "sendInviteEmailPayload"
      },
      {
        "fields": [{ "name": "email", "type": "String!" }],
        "name": "GenerateSelfRegLinkPayload"
      },
      {
        "fields": [
          { "name": "party_id", "type": "String!" },
          { "name": "uci_id", "type": "String!" }
        ],
        "name": "RegisterTcNpaySAPPayload"
      },
      {
        "fields": [{ "name": "context_type", "type": "String!" }],
        "name": "RetryThirdPartyCallPayload"
      },
      {
        "fields": [{ "name": "email", "type": "String!" }],
        "name": "CheckNpayEligibilityPayload"
      },
      {
        "fields": [{ "name": "email", "type": "String" }],
        "name": "NpayBannerPaylod"
      },
      {
        "fields": [
          { "name": "banner_id", "type": "BannerId!" },
          { "name": "data", "type": "NpayBannerPaylod" }
        ],
        "name": "GetBannerPayload"
      },
      {
        "fields": [
          { "name": "path", "type": "String" },
          { "name": "referrer", "type": "String" },
          { "name": "search", "type": "String" },
          { "name": "title", "type": "String" },
          { "name": "url", "type": "String" }
        ],
        "name": "EmployeeIdentifyPropertiesContextPage"
      },
      {
        "fields": [
          { "name": "ip", "type": "String" },
          { "name": "locale", "type": "String" },
          { "name": "page", "type": "EmployeeIdentifyPropertiesContextPage" },
          { "name": "userAgent", "type": "String" }
        ],
        "name": "EmployeeIdentifyPropertiesContext"
      },
      {
        "fields": [
          { "name": "context", "type": "EmployeeIdentifyPropertiesContext" },
          { "name": "timeStamp", "type": "String" }
        ],
        "name": "EmployeeIdentifyProperties"
      },
      {
        "fields": [
          { "name": "customer_id", "type": "uuid" },
          { "name": "auth_id", "type": "uuid" },
          { "name": "segment_action", "type": "String!" },
          { "name": "segment_action_properties", "type": "json" },
          { "name": "onboarded_channel", "type": "String" },
          { "name": "npay_status", "type": "Boolean" },
          {
            "name": "employee_identify_context_properties",
            "type": "EmployeeIdentifyProperties"
          }
        ],
        "name": "PostSegmentPayload"
      },
      {
        "fields": [
          { "name": "documentNumber", "type": "String!" },
          { "name": "purchaseDate", "type": "String!" },
          { "name": "fiscYear", "type": "String!" },
          { "name": "itemNum", "type": "String!" },
          { "name": "amount", "type": "Float!" },
          { "name": "interestAccured", "type": "Float" }
        ],
        "name": "PaymentDocumentRequestPayload"
      },
      {
        "fields": [
          { "name": "livestock", "type": "[PaymentDocumentRequestPayload]" },
          { "name": "merchandise", "type": "[PaymentDocumentRequestPayload]" }
        ],
        "name": "PaymentDocuments"
      },
      {
        "fields": [
          { "name": "documents", "type": "PaymentDocuments" },
          { "name": "totalAmountOfPayment", "type": "Float!" },
          { "name": "surcharge", "type": "Float" },
          { "name": "sttToken", "type": "String!" },
          { "name": "companyCode", "type": "String!" },
          { "name": "customerAccountNumber", "type": "String!" },
          { "name": "cardHolderName", "type": "String!" },
          { "name": "userAccountName", "type": "String" },
          { "name": "invoiceDocsSelected", "type": "[String]" }
        ],
        "name": "CardPaymentRequestPayload"
      },
      {
        "fields": [
          { "name": "documents", "type": "PaymentDocuments" },
          { "name": "totalAmountOfPayment", "type": "Float!" },
          { "name": "surcharge", "type": "Float" },
          { "name": "customerAccountNumber", "type": "String!" },
          { "name": "companyCode", "type": "String!" },
          { "name": "accountNumber", "type": "String!" },
          { "name": "accountRouting", "type": "String!" },
          { "name": "accountTitle", "type": "String!" },
          { "name": "userAccountName", "type": "String" },
          { "name": "invoiceDocsSelected", "type": "[String]" }
        ],
        "name": "DirectDebitPaymentRequestPayload"
      },
      {
        "fields": [
          { "name": "documentNumber", "type": "String!" },
          { "name": "accountId", "type": "String!" },
          { "name": "dueDate", "type": "String!" },
          { "name": "months", "type": "Int!" },
          { "name": "partyId", "type": "String!" }
        ],
        "name": "SetInvoicePreferredPaymentDatePayload"
      },
      {
        "fields": [
          { "name": "companyCode", "type": "String!" },
          { "name": "accountNumber", "type": "String!" },
          { "name": "fromDate", "type": "String!" },
          { "name": "toDate", "type": "String!" },
          { "name": "npay", "type": "Boolean" }
        ],
        "name": "SearchInvoicesPayload"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "String!" },
          { "name": "CompanyCode", "type": "String!" }
        ],
        "name": "GetFinancialAccountSummaryPayload"
      },
      {
        "fields": [
          {
            "name": "SearchTerms",
            "type": "[GetFinancialAccountSummaryPayload!]"
          }
        ],
        "name": "GetFinancialAccountsSummaryPayload"
      },
      {
        "fields": [
          {
            "name": "Accounts",
            "type": "[FinancialAccountSummarySplitUpPayload!]"
          }
        ],
        "name": "GetFinancialAccountSummarySplitUpPayload"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "String!" },
          { "name": "AccountType", "type": "String!" },
          { "name": "CompanyCode", "type": "String!" }
        ],
        "name": "FinancialAccountSummarySplitUpPayload"
      },
      {
        "fields": [
          { "name": "notification_ids", "type": "[Int!]" },
          { "name": "party_id", "type": "String!" },
          { "name": "active", "type": "Boolean!" }
        ],
        "name": "UpdateNotificationsActivePayload"
      },
      {
        "fields": [
          { "name": "person", "type": "AddPerson!" },
          { "name": "contact", "type": "AddContact!" }
        ],
        "name": "AddPersonPayload"
      },
      {
        "fields": [{ "name": "mobileNumber", "type": "String!" }],
        "name": "AddContact"
      },
      {
        "fields": [
          { "name": "loginName", "type": "String!" },
          { "name": "givenName", "type": "String!" },
          { "name": "familyName", "type": "String" },
          { "name": "preferredName", "type": "String" },
          { "name": "onboardedBranchCode", "type": "String" },
          { "name": "onboardedChannel", "type": "String!" }
        ],
        "name": "AddPerson"
      },
      {
        "fields": [
          { "name": "person", "type": "AddPerson!" },
          { "name": "contact", "type": "AddContact!" },
          { "name": "password", "type": "String!" },
          { "name": "touAccepted", "type": "Boolean!" },
          { "name": "token", "type": "String!" }
        ],
        "name": "RegisterPersonPayload"
      },
      {
        "fields": [
          { "name": "partyId", "type": "String!" },
          { "name": "person", "type": "UpdatePerson" },
          { "name": "contact", "type": "UpdateContact" }
        ],
        "name": "UpdatePersonPayload"
      },
      {
        "fields": [
          { "name": "givenName", "type": "String!" },
          { "name": "familyName", "type": "String" },
          { "name": "preferredName", "type": "String" },
          { "name": "onboardedBranchCode", "type": "String" }
        ],
        "name": "UpdatePerson"
      },
      {
        "fields": [{ "name": "mobileNumber", "type": "String!" }],
        "name": "UpdateContact"
      },
      {
        "fields": [
          { "name": "partyId", "type": "String!" },
          { "name": "uciID", "type": "String!" },
          { "name": "role", "type": "RoleTypes!" },
          { "name": "ownersPermission", "type": "Boolean!" },
          { "name": "resources", "type": "[LinkOrganisationResources]" }
        ],
        "name": "LinkOrganisationPayload"
      },
      {
        "fields": [
          { "name": "resourceId", "type": "String" },
          { "name": "permission", "type": "PermissionTypes" },
          { "name": "resourceType", "type": "ResourceTypes" }
        ],
        "name": "LinkOrganisationResources"
      },
      {
        "fields": [
          { "name": "partyId", "type": "String!" },
          { "name": "uciID", "type": "String" },
          { "name": "resources", "type": "[DelinkOrganisationResources]" }
        ],
        "name": "DelinkOrganisationPayload"
      },
      {
        "fields": [
          { "name": "resourceId", "type": "String!" },
          { "name": "resourceType", "type": "ResourceTypes!" }
        ],
        "name": "DelinkOrganisationResources"
      },
      {
        "fields": [{ "name": "partyId", "type": "String!" }],
        "name": "DeactivatePersonPayload"
      },
      {
        "fields": [{ "name": "partyId", "type": "String!" }],
        "name": "ReactivatePersonPayload"
      },
      {
        "fields": [
          { "name": "growthStage", "type": "[String]" },
          { "name": "cropType", "type": "[String]" }
        ],
        "name": "InterpretativeCriteriaPayload"
      }
    ],
    "objects": [
      {
        "fields": [
          { "name": "id", "type": "uuid" },
          { "name": "email", "type": "String" },
          { "name": "preferred_name", "type": "String" },
          { "name": "given_name", "type": "String" },
          { "name": "family_name", "type": "String" },
          { "name": "full_name", "type": "String" },
          { "name": "mobile_phone", "type": "String" }
        ],
        "name": "CreateCustomerSelfRegisterLoginResponse"
      },
      {
        "fields": [
          { "name": "email", "type": "String" },
          { "name": "abn", "type": "String" }
        ],
        "name": "TestEnablerCreateWhitelistRecordResponse"
      },
      {
        "fields": [
          { "name": "app_metadata", "type": "Auth0UserAppMetadata" },
          { "name": "blocked", "type": "Boolean" },
          { "name": "created_at", "type": "String" },
          { "name": "email", "type": "String" },
          { "name": "email_verified", "type": "Boolean" },
          { "name": "family_name", "type": "String" },
          { "name": "given_name", "type": "String" },
          { "name": "identities", "type": "[Auth0UserIdentity]" },
          { "name": "last_ip", "type": "String" },
          { "name": "last_login", "type": "String" },
          { "name": "logins_count", "type": "Int" },
          { "name": "multifactor", "type": "[String]" },
          { "name": "name", "type": "String" },
          { "name": "nickname", "type": "String" },
          { "name": "phone_number", "type": "String" },
          { "name": "phone_verified", "type": "Boolean" },
          { "name": "picture", "type": "String" },
          { "name": "updated_at", "type": "String" },
          { "name": "user_id", "type": "String" },
          { "name": "user_metadata", "type": "Auth0UserUserMetadata" },
          { "name": "username", "type": "String" },
          { "name": "last_password_reset", "type": "String" }
        ],
        "name": "Auth0User"
      },
      {
        "fields": [
          { "name": "id", "type": "String!" },
          { "name": "auth_id", "type": "String" },
          { "name": "email", "type": "String" },
          { "name": "preferred_branch_code", "type": "String" },
          { "name": "onboarded_branch_code", "type": "String" },
          { "name": "preferred_name", "type": "String" },
          { "name": "given_name", "type": "String" },
          { "name": "family_name", "type": "String" },
          { "name": "full_name", "type": "String" },
          { "name": "mobile_phone", "type": "String" },
          { "name": "created_dtm", "type": "String" },
          { "name": "updated_dtm", "type": "String" }
        ],
        "name": "ProfileMutationResponse"
      },
      {
        "fields": [
          { "name": "Code", "type": "String" },
          { "name": "Description", "type": "String" }
        ],
        "name": "CategoryItem"
      },
      {
        "fields": [
          { "name": "Quantity", "type": "Int" },
          { "name": "UnitOfMeasure", "type": "String" },
          { "name": "MaterialDescription", "type": "String" },
          { "name": "ActiveIngredient", "type": "String" },
          { "name": "UnitPriceWithGST", "type": "Float" },
          { "name": "UnitPriceWithOutGST", "type": "Float" },
          { "name": "UnitTaxAmount", "type": "Float" },
          { "name": "TotalAmountWithGST", "type": "Float" },
          { "name": "TotalAmountWithOutGST", "type": "Float" },
          { "name": "TotalTaxAmount", "type": "Float" },
          { "name": "Category", "type": "String" },
          { "name": "MerchandiseCategory1", "type": "CategoryItem" },
          { "name": "MerchandiseCategory2", "type": "CategoryItem" },
          { "name": "MerchandiseCategory3", "type": "CategoryItem" },
          { "name": "MerchandiseCategory4", "type": "CategoryItem" },
          { "name": "BaseMerchandiseCategory", "type": "CategoryItem" }
        ],
        "name": "LineItem"
      },
      {
        "fields": [
          { "name": "Id", "type": "String!" },
          { "name": "Relationship", "type": "[GroupByType!]!" },
          { "name": "GroupByType", "type": "GroupByType" },
          { "name": "GroupTitle", "type": "String" },
          { "name": "SubTitle", "type": "String" }
        ],
        "name": "GroupByRelationship"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "Int" },
          { "name": "Date", "type": "String" },
          { "name": "Location", "type": "String" },
          { "name": "Description", "type": "String" },
          { "name": "DocumentNumber", "type": "Int" },
          { "name": "DocumentId", "type": "String" },
          { "name": "RefDocNumber", "type": "String" },
          { "name": "PurchaseOrderNumber", "type": "String" },
          { "name": "Amount", "type": "Int" },
          { "name": "DueDate", "type": "String" },
          { "name": "Segment", "type": "String" },
          { "name": "PostingKey", "type": "String" },
          { "name": "DocumentType", "type": "String" },
          { "name": "Items", "type": "[LineItem!]!" },
          { "name": "RuralcoAccNumber", "type": "Int" },
          { "name": "SaleDate", "type": "String" },
          { "name": "GroupTitle", "type": "String" },
          { "name": "Category", "type": "String" },
          { "name": "HasPdf", "type": "Boolean" },
          { "name": "GroupBy", "type": "String" },
          { "name": "AccountName", "type": "String" },
          { "name": "GSTAmount", "type": "String" },
          { "name": "AmountExcGST", "type": "String" },
          { "name": "ClearingDocNo", "type": "Int" },
          { "name": "Type", "type": "TxnType" },
          { "name": "MaxDueDate", "type": "String" },
          { "name": "Status", "type": "[TxnStatus!]!" },
          { "name": "PayLaterInterestRef", "type": "String" },
          { "name": "PayLaterInterestRefYear", "type": "String" },
          { "name": "PayLaterInterestRate", "type": "Int" },
          { "name": "PaymentTerm", "type": "String" },
          { "name": "GroupByRelationship", "type": "GroupByRelationship" },
          { "name": "IsPayLaterInterestRollUp", "type": "Boolean" },
          { "name": "DisputedFlag", "type": "String" }
        ],
        "name": "GetLineItemsResponse"
      },
      {
        "fields": [
          { "name": "LotDetails", "type": "[PlasmaLotDetails!]" },
          { "name": "LotFeeDetails", "type": "[PlasmaLotFeeDetails!]" }
        ],
        "name": "LotDetailResult"
      },
      {
        "fields": [
          { "name": "success", "type": "Boolean" },
          { "name": "documentNumber", "type": "String" },
          { "name": "error", "type": "String" },
          { "name": "result", "type": "LotDetailResult" }
        ],
        "name": "GetLotDetailsResponse"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "Int" },
          { "name": "CurrentBalance", "type": "Float" },
          { "name": "RewardAmount", "type": "Float" },
          { "name": "TransactionAmount", "type": "Float" },
          { "name": "RuralcoAccNumber", "type": "Float" },
          { "name": "AccountType", "type": "String" },
          { "name": "ExtendedTermAmount", "type": "Float" },
          { "name": "LivestockOverDue", "type": "Float" },
          { "name": "LivestockCurrentDue", "type": "Float" },
          { "name": "MerchandiseOverDue", "type": "Float" },
          { "name": "MerchandiseCurrentDue", "type": "Float" },
          { "name": "ProceedsPending", "type": "Float" },
          { "name": "ProceedsOverDue", "type": "Float" },
          { "name": "UnallocatedPayments", "type": "Float" },
          { "name": "PaymentAdvice", "type": "String" },
          { "name": "InterestRate", "type": "Float" },
          { "name": "CreditLimit", "type": "Float" },
          { "name": "MerchInterestBearingCurrent", "type": "Float" },
          { "name": "MerchNonInterestBearingCurrent", "type": "Float" },
          { "name": "LivestockInterestBearingCurrent", "type": "Float" },
          { "name": "LivestockNonInterestBearingCurrent", "type": "Float" },
          { "name": "LivestockNonInterestBearingProceeds", "type": "Float" },
          { "name": "BSB", "type": "String" },
          { "name": "BankAccount", "type": "String" },
          { "name": "BillerCode", "type": "String" },
          { "name": "Reference", "type": "String" },
          { "name": "Name1", "type": "String" },
          { "name": "PayLaterDetails", "type": "PayLaterDetails" },
          { "name": "isCached", "type": "Boolean" },
          { "name": "ttl", "type": "Int" }
        ],
        "name": "GetAccountsSummaryResponse"
      },
      {
        "fields": [
          { "name": "Key", "type": "String" },
          { "name": "Label", "type": "String" },
          { "name": "Amount", "type": "Int" },
          { "name": "AmountOwing", "type": "Float!" },
          { "name": "Type", "type": "String" }
        ],
        "name": "SplitUpSummary"
      },
      {
        "fields": [
          { "name": "DocumentNumber", "type": "String" },
          { "name": "DocDescription", "type": "String" },
          { "name": "DueDate", "type": "String" },
          { "name": "DocDate", "type": "String" },
          { "name": "ClearingDocNumber", "type": "String" },
          { "name": "Amount", "type": "Int" },
          { "name": "AmountOwing", "type": "Float!" },
          { "name": "Currency", "type": "String" },
          { "name": "ItemNumber", "type": "String" },
          { "name": "FiscYear", "type": "String" },
          { "name": "DisputedTransactionFlag", "type": "Boolean" },
          { "name": "PayableDescription", "type": "String" },
          { "name": "InvoiceRef", "type": "String" },
          { "name": "InvoiceYear", "type": "String" },
          { "name": "InvoiceItem", "type": "String" },
          { "name": "NextDocumentType", "type": "String" },
          { "name": "IsNPay", "type": "Boolean" },
          { "name": "NPayStatus", "type": "SplitUpDocumentNPayStatus" },
          { "name": "MaxDueDate", "type": "String" },
          { "name": "PayLaterInterestRef", "type": "String" },
          { "name": "PayLaterInterestRefYear", "type": "String" },
          { "name": "InterestStartDate", "type": "String" },
          { "name": "InterestEndDate", "type": "String" },
          { "name": "IsPayLaterInterestRollUp", "type": "Boolean" },
          { "name": "InterestTotal", "type": "Int" },
          { "name": "InterestTotalOwing", "type": "Float" },
          { "name": "Payments", "type": "Payments" },
          { "name": "PartialPayments", "type": "PartialPayments" },
          { "name": "Interests", "type": "Interests" },
          { "name": "InterestPayments", "type": "InterestPayments" },
          { "name": "UnclearedInterests", "type": "UnclearedInterests" }
        ],
        "name": "SplitUpDocument"
      },
      {
        "fields": [
          { "name": "DocumentNumber", "type": "String" },
          { "name": "DocDescription", "type": "String" },
          { "name": "DueDate", "type": "String" },
          { "name": "DocDate", "type": "String" },
          { "name": "ClearingDocNumber", "type": "String" },
          { "name": "Amount", "type": "Int" },
          { "name": "Currency", "type": "String" },
          { "name": "ItemNumber", "type": "String" },
          { "name": "FiscYear", "type": "String" },
          { "name": "DisputedTransactionFlag", "type": "Boolean" },
          { "name": "PayableDescription", "type": "String" },
          { "name": "InvoiceRef", "type": "String" },
          { "name": "InvoiceYear", "type": "String" },
          { "name": "InvoiceItem", "type": "String" },
          { "name": "NextDocumentType", "type": "String" },
          { "name": "IsNPay", "type": "Boolean" },
          { "name": "NPayStatus", "type": "SplitUpDocumentNPayStatus" },
          { "name": "MaxDueDate", "type": "String" },
          { "name": "PayLaterInterestRef", "type": "String" },
          { "name": "PayLaterInterestRefYear", "type": "String" },
          { "name": "InterestStartDate", "type": "String" },
          { "name": "InterestEndDate", "type": "String" },
          { "name": "IsPayLaterInterestRollUp", "type": "Boolean" }
        ],
        "name": "PaymentsDocument"
      },
      {
        "fields": [
          { "name": "DocumentNumber", "type": "String" },
          { "name": "DocDescription", "type": "String" },
          { "name": "DueDate", "type": "String" },
          { "name": "DocDate", "type": "String" },
          { "name": "ClearingDocNumber", "type": "String" },
          { "name": "Amount", "type": "Int" },
          { "name": "Currency", "type": "String" },
          { "name": "ItemNumber", "type": "String" },
          { "name": "FiscYear", "type": "String" },
          { "name": "DisputedTransactionFlag", "type": "Boolean" },
          { "name": "PayableDescription", "type": "String" },
          { "name": "InvoiceRef", "type": "String" },
          { "name": "InvoiceYear", "type": "String" },
          { "name": "InvoiceItem", "type": "String" },
          { "name": "NextDocumentType", "type": "String" },
          { "name": "IsNPay", "type": "Boolean" },
          { "name": "NPayStatus", "type": "SplitUpDocumentNPayStatus" },
          { "name": "MaxDueDate", "type": "String" },
          { "name": "PayLaterInterestRef", "type": "String" },
          { "name": "PayLaterInterestRefYear", "type": "String" },
          { "name": "InterestStartDate", "type": "String" },
          { "name": "InterestEndDate", "type": "String" },
          { "name": "IsPayLaterInterestRollUp", "type": "Boolean" }
        ],
        "name": "InterestsDocument"
      },
      {
        "fields": [
          { "name": "Documents", "type": "[PaymentsDocument!]" },
          { "name": "Total", "type": "Int!" }
        ],
        "name": "Payments"
      },
      {
        "fields": [
          { "name": "Documents", "type": "[PaymentsDocument!]" },
          { "name": "Total", "type": "Int!" }
        ],
        "name": "PartialPayments"
      },
      {
        "fields": [
          { "name": "Documents", "type": "[InterestsDocument!]" },
          { "name": "Total", "type": "Int!" }
        ],
        "name": "Interests"
      },
      {
        "fields": [
          { "name": "Documents", "type": "[InterestsDocument!]" },
          { "name": "Total", "type": "Int!" }
        ],
        "name": "UnclearedInterests"
      },
      {
        "fields": [{ "name": "Total", "type": "Int!" }],
        "name": "InterestPayments"
      },
      {
        "fields": [
          { "name": "AccountSplit", "type": "String" },
          { "name": "Field", "type": "String" },
          { "name": "SubField", "type": "String" },
          { "name": "Total", "type": "Float" },
          { "name": "TotalOwing", "type": "Float!" },
          { "name": "Status", "type": "SplitUpResponseItemStatus" },
          { "name": "Summary", "type": "[SplitUpSummary!]" },
          { "name": "Documents", "type": "[SplitUpDocument!]" }
        ],
        "name": "SplitUpResponseItem"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "String" },
          { "name": "Items", "type": "[SplitUpResponseItem!]" },
          { "name": "isCached", "type": "Boolean" },
          { "name": "ttl", "type": "Int" }
        ],
        "name": "GetAccountSummarySplitUpResponse"
      },
      {
        "fields": [
          { "name": "status", "type": "Boolean" },
          { "name": "created_at", "type": "String" }
        ],
        "name": "GetSendInviteResponse"
      },
      {
        "fields": [
          { "name": "accountId", "type": "String" },
          { "name": "type", "type": "String" },
          { "name": "s3Objects", "type": "[String]" }
        ],
        "name": "GetDocumentsResponse"
      },
      {
        "fields": [
          { "name": "url", "type": "String" },
          { "name": "type", "type": "String" },
          { "name": "id", "type": "String" }
        ],
        "name": "GetDocumentUrlResponse"
      },
      {
        "fields": [
          { "name": "documentId", "type": "String!" },
          { "name": "accountType", "type": "DocumentAccountType" },
          { "name": "accountNumber", "type": "String" },
          { "name": "customerName", "type": "String" },
          { "name": "issueDate", "type": "String" },
          { "name": "paymentDueDate", "type": "String" },
          { "name": "issueSiteName", "type": "String" },
          { "name": "issueSiteCode", "type": "String" },
          { "name": "documentNumber", "type": "String" },
          { "name": "documentType", "type": "String" },
          { "name": "amount", "type": "String" },
          { "name": "poNumber", "type": "String" },
          { "name": "url", "type": "String" },
          { "name": "companyCode", "type": "String" }
        ],
        "name": "SearchDocumentsResponse"
      },
      {
        "fields": [{ "name": "url", "type": "String!" }],
        "name": "GetDocumentByIdResponse"
      },
      {
        "fields": [{ "name": "url", "type": "String!" }],
        "name": "GetPdfResponse"
      },
      {
        "fields": [
          { "name": "url", "type": "String!" },
          { "name": "fileSize", "type": "Int" }
        ],
        "name": "GetPdfZipResponse"
      },
      {
        "fields": [
          { "name": "customer_id", "type": "uuid!" },
          { "name": "account_id", "type": "String!" },
          { "name": "created_dtm", "type": "date!" },
          { "name": "updated_dtm", "type": "date!" }
        ],
        "name": "InsertCustomerAccountsResponse"
      },
      {
        "fields": [
          { "name": "customer_id", "type": "uuid!" },
          { "name": "account_id", "type": "String!" },
          { "name": "created_dtm", "type": "date!" },
          { "name": "updated_dtm", "type": "date!" },
          { "name": "is_deleted", "type": "Boolean!" }
        ],
        "name": "DeleteCustomerAccountsResponse"
      },
      {
        "fields": [
          { "name": "date", "type": "String" },
          { "name": "type", "type": "String" },
          { "name": "description", "type": "String" },
          { "name": "connection", "type": "String" },
          { "name": "connection_id", "type": "String" },
          { "name": "client_id", "type": "String" },
          { "name": "client_name", "type": "String" },
          { "name": "ip", "type": "String" },
          { "name": "user_agent", "type": "String" },
          { "name": "details", "type": "LoginLogDetails" },
          { "name": "user_id", "type": "String" },
          { "name": "user_name", "type": "String" },
          { "name": "strategy", "type": "String" },
          { "name": "strategy_type", "type": "String" },
          { "name": "log_id", "type": "String" },
          { "name": "_id", "type": "String" },
          { "name": "isMobile", "type": "Boolean" },
          { "name": "location_info", "type": "LoginLogLocation" },
          { "name": "urlLifetimeInSeconds", "type": "Int" },
          { "name": "verificationLinkExpiration", "type": "String" },
          { "name": "verificationLinkIsExpired", "type": "Boolean" }
        ],
        "name": "GetCustomerLatestVerificationResponse"
      },
      {
        "fields": [
          { "name": "type", "type": "String" },
          { "name": "status", "type": "String" },
          { "name": "created_at", "type": "String" },
          { "name": "id", "type": "String" }
        ],
        "name": "Auth0Job"
      },
      {
        "fields": [
          { "name": "customerProfile", "type": "json" },
          { "name": "registrationStatus", "type": "String" }
        ],
        "name": "GetRegistrationStatusResponse"
      },
      {
        "fields": [{ "name": "total", "type": "Int" }],
        "name": "GetRegistrationStatusTotalItemsResponse"
      },
      {
        "fields": [
          { "name": "account_id", "type": "String" },
          { "name": "account_type", "type": "String" },
          { "name": "name1", "type": "String" }
        ],
        "name": "AccountDetails"
      },
      {
        "fields": [
          { "name": "Category", "type": "String" },
          { "name": "GroupTitle", "type": "String" },
          { "name": "Fee", "type": "Float" },
          { "name": "LotAmountExcGST", "type": "Float" },
          { "name": "GSTAmount", "type": "Float" },
          { "name": "LotId", "type": "String" },
          { "name": "LotNumber", "type": "String" },
          { "name": "LotType", "type": "String" },
          { "name": "TotalHeads", "type": "String" },
          { "name": "TotalWeight", "type": "String" },
          { "name": "PerHeadRateIncGST", "type": "String" },
          { "name": "PerHeadRateExcGST", "type": "String" },
          { "name": "PerKgRateIncGST", "type": "String" },
          { "name": "PerKgRateExcGST", "type": "String" }
        ],
        "name": "PlasmaLotDetails"
      },
      {
        "fields": [
          { "name": "Category", "type": "String" },
          { "name": "GroupTitle", "type": "String" },
          { "name": "FeeCode", "type": "String" },
          { "name": "Fee", "type": "Float" },
          { "name": "FeeAmountExcGST", "type": "Float" },
          { "name": "GSTOnFee", "type": "Float" }
        ],
        "name": "PlasmaLotFeeDetails"
      },
      {
        "fields": [{ "name": "status", "type": "String" }],
        "name": "EmailSupportNonWhiteListedCustomersResponse"
      },
      {
        "fields": [
          { "name": "TandCAcceptance", "type": "Boolean" },
          { "name": "CustomerStatus", "type": "String" },
          { "name": "InterestRate", "type": "Float" },
          { "name": "CustomerReasonCurrent", "type": "String" },
          { "name": "CustomerReasonCurrentDateTime", "type": "String" },
          { "name": "CustomerReasonPrevious", "type": "String" },
          { "name": "CustomerReasonPreviousDateTime", "type": "String" },
          { "name": "AccountStatus", "type": "Int" },
          { "name": "AccountReasonCurrent", "type": "Int" },
          { "name": "AccountReasonCurrentDateTime", "type": "String" },
          { "name": "AccountReasonPrevious", "type": "Int" },
          { "name": "AccountReasonPreviousDateTime", "type": "String" },
          { "name": "MerchExtended", "type": "Float" },
          { "name": "LivestockExtended", "type": "Float" },
          { "name": "LivestockDueLater", "type": "Float" }
        ],
        "name": "PayLaterDetails"
      },
      {
        "fields": [
          { "name": "type", "type": "String!" },
          { "name": "status", "type": "String!" }
        ],
        "name": "GetDbHealthCheckResponse"
      },
      {
        "fields": [{ "name": "ticket", "type": "String" }],
        "name": "GetPasswordResetTicketResponse"
      },
      {
        "fields": [
          { "name": "app_metadata", "type": "UserIdentityAppMetadata" },
          { "name": "blocked", "type": "Boolean" },
          { "name": "created_at", "type": "String" },
          { "name": "email", "type": "String" },
          { "name": "email_verified", "type": "Boolean" },
          { "name": "family_name", "type": "String" },
          { "name": "given_name", "type": "String" },
          { "name": "identities", "type": "[AuthenticatorIdentity]" },
          { "name": "last_ip", "type": "String" },
          { "name": "last_login", "type": "String" },
          { "name": "logins_count", "type": "Int" },
          { "name": "multifactor", "type": "[String]" },
          { "name": "name", "type": "String" },
          { "name": "nickname", "type": "String" },
          { "name": "phone_number", "type": "String" },
          { "name": "phone_verified", "type": "Boolean" },
          { "name": "picture", "type": "String" },
          { "name": "updated_at", "type": "String" },
          { "name": "user_id", "type": "String" },
          { "name": "user_metadata", "type": "UserIdentityMetadata" },
          { "name": "username", "type": "String" },
          { "name": "last_password_reset", "type": "String" }
        ],
        "name": "UserIdentity"
      },
      {
        "fields": [
          { "name": "party_id", "type": "uuid" },
          { "name": "type", "type": "String!" },
          { "name": "value", "type": "String!" }
        ],
        "name": "RegisterTOUResponse"
      },
      {
        "fields": [{ "name": "emailSentTo", "type": "String!" }],
        "name": "SendOptOutNpayEmailResponse"
      },
      {
        "fields": [
          { "name": "party_id", "type": "uuid" },
          { "name": "email", "type": "String" },
          { "name": "used_date", "type": "String" },
          { "name": "generated_date", "type": "String" }
        ],
        "name": "UpdateNutrienTokenResponse"
      },
      {
        "fields": [
          { "name": "emailSentTo", "type": "[String]!" },
          { "name": "error", "type": "[String]" }
        ],
        "name": "sendInviteEmailResponse"
      },
      {
        "fields": [
          { "name": "accountExists", "type": "Boolean" },
          { "name": "registered", "type": "Boolean" }
        ],
        "name": "checkEmailResponse"
      },
      {
        "fields": [{ "name": "link", "type": "String!" }],
        "name": "GenerateSelfRegLinkResponse"
      },
      {
        "fields": [
          { "name": "accepted", "type": "Boolean!" },
          { "name": "retryLater", "type": "Boolean!" }
        ],
        "name": "RegisterTcNpaySAPResponse"
      },
      {
        "fields": [{ "name": "retried", "type": "Boolean" }],
        "name": "RetryThirdPartyCallResponse"
      },
      {
        "fields": [
          { "name": "initial_login", "type": "Boolean!" },
          { "name": "uci_list", "type": "[String!]" },
          { "name": "sap_processed_list", "type": "[String!]" },
          { "name": "sap_processing_list", "type": "[String!]" }
        ],
        "name": "CheckNpayEligibilityResponse"
      },
      {
        "fields": [
          { "name": "initial_login", "type": "Boolean!" },
          { "name": "uci_list", "type": "[String!]" }
        ],
        "name": "NpayOfferBannerMetaData"
      },
      {
        "fields": [
          { "name": "bannerName", "type": "NPayBannerType!" },
          { "name": "title", "type": "String" },
          { "name": "content", "type": "String" },
          { "name": "metadata", "type": "NpayOfferBannerMetaData" }
        ],
        "name": "GetBanner"
      },
      {
        "fields": [{ "name": "banners", "type": "[GetBanner]" }],
        "name": "GetBannerResponse"
      },
      {
        "fields": [{ "name": "sent", "type": "Boolean" }],
        "name": "PostSegmentResponse"
      },
      {
        "fields": [
          { "name": "responseCode", "type": "String" },
          { "name": "timestamp", "type": "String" },
          { "name": "receipt", "type": "String" },
          { "name": "settlementDate", "type": "String" },
          { "name": "email", "type": "String" },
          { "name": "totalAmountOfPayment", "type": "String" },
          { "name": "surcharge", "type": "String" },
          { "name": "cardType", "type": "String" },
          { "name": "truncatedCard", "type": "String" },
          { "name": "postingPaymentProcessingError", "type": "Boolean" }
        ],
        "name": "MakePaymentCardResponse"
      },
      {
        "fields": [
          { "name": "responseCode", "type": "String" },
          { "name": "timestamp", "type": "String" },
          { "name": "receipt", "type": "String" },
          { "name": "settlementDate", "type": "String" },
          { "name": "email", "type": "String" },
          { "name": "totalAmountOfPayment", "type": "String" },
          { "name": "postingPaymentProcessingError", "type": "Boolean" }
        ],
        "name": "MakePaymentDirectDebitResponse"
      },
      {
        "fields": [
          { "name": "accountNumber", "type": "String!" },
          { "name": "accountType", "type": "String!" }
        ],
        "name": "GetFinancialAccountTypesOutput"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "Int" },
          { "name": "RuralcoAccNumber", "type": "String" },
          { "name": "Date", "type": "String" },
          { "name": "Location", "type": "String" },
          { "name": "Description", "type": "String" },
          { "name": "DocumentNumber", "type": "Int" },
          { "name": "ClearingDocNo", "type": "Int" },
          { "name": "ClearingDocDate", "type": "String" },
          { "name": "PurchaseOrderNumber", "type": "String" },
          { "name": "DocumentType", "type": "String" },
          { "name": "RefDocNumber", "type": "String" },
          { "name": "Amount", "type": "Float" },
          { "name": "DueDate", "type": "String" },
          { "name": "Segment", "type": "String" },
          { "name": "PostingKey", "type": "String" },
          { "name": "Items", "type": "[String]" }
        ],
        "name": "SearchInvoicesResponse"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "Int" },
          { "name": "CurrentBalance", "type": "Int" },
          { "name": "RewardAmount", "type": "Int" },
          { "name": "TransactionAmount", "type": "Int" },
          { "name": "RuralcoAccNumber", "type": "Int" }
        ],
        "name": "GetFinancialAccountSummaryResponse"
      },
      {
        "fields": [
          { "name": "Key", "type": "String" },
          { "name": "Label", "type": "String" },
          { "name": "Amount", "type": "Int" },
          { "name": "Type", "type": "String" }
        ],
        "name": "FinancialSplitUpSummary"
      },
      {
        "fields": [
          { "name": "DocumentNumber", "type": "String" },
          { "name": "DocDescription", "type": "String" },
          { "name": "DueDate", "type": "String" },
          { "name": "DocDate", "type": "String" },
          { "name": "ClearingDocNumber", "type": "String" },
          { "name": "Amount", "type": "Int" },
          { "name": "Currency", "type": "String" }
        ],
        "name": "FinancialSplitUpDocument"
      },
      {
        "fields": [
          { "name": "AccountSplit", "type": "String" },
          { "name": "Field", "type": "String" },
          { "name": "SubField", "type": "String" },
          { "name": "Total", "type": "Float" },
          { "name": "Summary", "type": "[FinancialSplitUpSummary!]" },
          { "name": "Documents", "type": "[FinancialSplitUpDocument!]" }
        ],
        "name": "FinancialSplitUpResponseItem"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "String" },
          { "name": "Items", "type": "[FinancialSplitUpResponseItem!]" },
          { "name": "isCached", "type": "Boolean" },
          { "name": "ttl", "type": "Int" }
        ],
        "name": "GetFinancialAccountSummarySplitUpResponse"
      },
      {
        "fields": [
          { "name": "AccountNumber", "type": "Int" },
          { "name": "CurrentBalance", "type": "Float" },
          { "name": "RewardAmount", "type": "Float" },
          { "name": "TransactionAmount", "type": "Float" },
          { "name": "RuralcoAccNumber", "type": "Float" },
          { "name": "AccountType", "type": "String" },
          { "name": "ExtendedTermAmount", "type": "Float" },
          { "name": "LivestockOverDue", "type": "Float" },
          { "name": "LivestockCurrentDue", "type": "Float" },
          { "name": "MerchandiseOverDue", "type": "Float" },
          { "name": "MerchandiseCurrentDue", "type": "Float" },
          { "name": "ProceedsPending", "type": "Float" },
          { "name": "ProceedsOverDue", "type": "Float" },
          { "name": "UnallocatedPayments", "type": "Float" },
          { "name": "PaymentAdvice", "type": "String" },
          { "name": "InterestRate", "type": "Float" },
          { "name": "CreditLimit", "type": "Float" },
          { "name": "MerchInterestBearingCurrent", "type": "Float" },
          { "name": "MerchNonInterestBearingCurrent", "type": "Float" },
          { "name": "LivestockInterestBearingCurrent", "type": "Float" },
          { "name": "LivestockNonInterestBearingCurrent", "type": "Float" },
          { "name": "BSB", "type": "String" },
          { "name": "BankAccount", "type": "String" },
          { "name": "BillerCode", "type": "String" },
          { "name": "Reference", "type": "String" },
          { "name": "Name1", "type": "String" },
          { "name": "isCached", "type": "Boolean" },
          { "name": "ttl", "type": "Int" }
        ],
        "name": "GetFinancialAccountsSummaryResponse"
      },
      {
        "fields": [
          { "name": "status", "type": "String" },
          { "name": "ignored_ids", "type": "String" },
          { "name": "message", "type": "String" }
        ],
        "name": "NotificationsActiveMutationResponse"
      },
      {
        "fields": [{ "name": "partyId", "type": "String!" }],
        "name": "PersonResponse",
        "relationships": [
          {
            "field_mapping": { "partyId": "party_id" },
            "name": "PersonResponse_Person",
            "remote_table": { "name": "person", "schema": "party" },
            "source": "party",
            "type": "object"
          }
        ]
      },
      {
        "fields": [
          { "name": "value", "type": "String" },
          { "name": "error", "type": "String" }
        ],
        "name": "InterpretativeCriteriaResult"
      }
    ],
    "scalars": [
      { "name": "Auth0UserAppMetadata" },
      { "name": "Auth0UserUserMetadata" },
      { "name": "Auth0UserIdentity" },
      { "name": "LoginLogDetails" },
      { "name": "LoginLogLocation" },
      { "name": "UserIdentityAppMetadata" },
      { "name": "AuthenticatorIdentity" },
      { "name": "UserIdentityMetadata" }
    ]
  },
  "graphql_schema_introspection": { "disabled_for_roles": ["anonymous"] },
  "query_collections": [
    { "definition": { "queries": [] }, "name": "allowed-queries" }
  ],
  "remote_schemas": [
    {
      "definition": {
        "forward_client_headers": true,
        "timeout_seconds": 60,
        "url": "{{API_BASE_URL}}/au-service-finance/graphql"
      },
      "name": "FinanceServiceGraph"
    },
    {
      "definition": {
        "customization": { "root_fields_namespace": "identity" },
        "forward_client_headers": true,
        "timeout_seconds": 60,
        "url": "{{API_BASE_URL}}/au-service-identity/graphql"
      },
      "name": "IdentityServiceGraph"
    },
    {
      "definition": {
        "customization": { "root_fields_namespace": "experimental" },
        "forward_client_headers": true,
        "timeout_seconds": 60,
        "url": "{{API_BASE_URL}}/au-service-party/graphql"
      },
      "name": "PartyServiceGraph"
    }
  ],
  "sources": [
    {
      "configuration": {
        "connection_info": {
          "database_url": { "from_env": "CONTEXT_DB_URL" },
          "isolation_level": "read-committed",
          "pool_settings": { "connection_lifetime": 600 },
          "use_prepared_statements": false
        }
      },
      "kind": "postgres",
      "name": "context",
      "tables": [
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ]
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ]
              },
              "role": "staff"
            }
          ],
          "remote_relationships": [
            {
              "definition": {
                "to_source": {
                  "field_mapping": { "party_id": "party_id" },
                  "relationship_type": "object",
                  "source": "party",
                  "table": { "name": "person", "schema": "party" }
                }
              },
              "name": "person"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "nutrien_token", "schema": "context" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "identifier",
                  "email",
                  "party_id",
                  "generated_date",
                  "used_date"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ]
        },
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "id",
                  "type",
                  "received",
                  "value",
                  "retries",
                  "last_try"
                ]
              },
              "role": "nutrien-services-m2m"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "id",
                  "type",
                  "received",
                  "value",
                  "retries",
                  "last_try"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            }
          ],
          "table": { "name": "third_party_calls", "schema": "context" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "id",
                  "type",
                  "received",
                  "value",
                  "retries",
                  "last_try"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            }
          ]
        },
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm"
                ]
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm"
                ]
              },
              "role": "user"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "person", "schema": "permissions" },
                    "_where": {
                      "_and": [
                        { "party_id": { "_ceq": ["$", "party_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "uci_context", "schema": "context" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "updated_dtm"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "uci_id",
                  "party_id",
                  "type",
                  "value",
                  "updated_dtm"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ]
        },
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "party_id"
                ]
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "party_id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "party_id"
                ]
              },
              "role": "user"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "type",
                  "created_dtm",
                  "updated_dtm",
                  "value",
                  "party_id"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "type",
                  "created_dtm",
                  "updated_dtm",
                  "value",
                  "party_id"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "person", "schema": "permissions" },
                    "_where": {
                      "_and": [
                        { "party_id": { "_ceq": ["$", "party_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "type",
                  "created_dtm",
                  "updated_dtm",
                  "value",
                  "party_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "user_context", "schema": "context" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "party_id"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "party_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "type",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "party_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ]
        },
        {
          "insert_permissions": [
            {
              "permission": { "check": {}, "columns": ["description", "type"] },
              "role": "staff"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["type", "description"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["type", "description"],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["type", "description"],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "user_context_type", "schema": "context" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": ["description", "type"],
                "filter": {}
              },
              "role": "staff"
            }
          ]
        },
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": ["status", "type", "sent_dtm", "party_id"]
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": ["status", "type", "sent_dtm", "party_id"]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": ["status", "type", "sent_dtm", "party_id"]
              },
              "role": "user"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": ["status", "type", "sent_dtm", "party_id"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "type", "sent_dtm", "status"],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": ["status", "type", "sent_dtm", "party_id"],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "user_email", "schema": "context" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": ["status", "type", "sent_dtm", "party_id"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "check": {},
                "columns": ["status", "type", "sent_dtm", "party_id"],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": ["status", "type", "sent_dtm", "party_id"],
                "filter": {}
              },
              "role": "user"
            }
          ]
        },
        {
          "configuration": {
            "column_config": {},
            "custom_column_names": {},
            "custom_name": "context_person",
            "custom_root_fields": {}
          },
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "company_code"],
                "filter": { "company_code": { "_eq": "X-Hasura-Company-Code" } }
              },
              "role": "staff"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "company_code"],
                "filter": {
                  "_and": [
                    { "company_code": { "_eq": "X-Hasura-Company-Code" } },
                    { "party_id": { "_eq": "x-Hasura-User-id" } }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "person", "schema": "permissions" }
        },
        {
          "configuration": {
            "column_config": {},
            "custom_column_names": {},
            "custom_name": "context_person_org_role_permissions",
            "custom_root_fields": {}
          },
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "role", "uci_id"],
                "filter": {
                  "_exists": {
                    "_table": { "name": "person", "schema": "permissions" },
                    "_where": {
                      "_and": [
                        { "party_id": { "_ceq": ["$", "party_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "role", "uci_id"],
                "filter": {
                  "_and": [
                    { "party_id": { "_eq": "x-Hasura-User-id" } },
                    {
                      "_exists": {
                        "_table": { "name": "person", "schema": "permissions" },
                        "_where": {
                          "company_code": { "_eq": "X-Hasura-Company-Code" }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": {
            "name": "person_organisation_role",
            "schema": "permissions"
          }
        }
      ]
    },
    {
      "configuration": {
        "connection_info": {
          "database_url": { "from_env": "CUSTOMER_DB_URL" },
          "isolation_level": "read-committed",
          "pool_settings": { "connection_lifetime": 600 },
          "use_prepared_statements": false
        }
      },
      "kind": "postgres",
      "name": "customer",
      "tables": [
        {
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "account_id",
                  "posting_dtm",
                  "total_account_balance",
                  "extended_term_balance",
                  "overdue_balance",
                  "current_due",
                  "total_due",
                  "opening_balance",
                  "closing_balance_no_et",
                  "total_extended_term_balance",
                  "total_balance_on_account",
                  "total_proceeds",
                  "subtotal_merch_fert"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "account_id",
                  "posting_dtm",
                  "total_account_balance",
                  "extended_term_balance",
                  "overdue_balance",
                  "current_due",
                  "total_due",
                  "opening_balance",
                  "closing_balance_no_et",
                  "total_extended_term_balance",
                  "total_balance_on_account",
                  "total_proceeds",
                  "subtotal_merch_fert"
                ],
                "filter": { "account_id": { "_in": "X-Hasura-Allowed-Ids" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "customer_statement", "schema": "customer" }
        },
        {
          "select_permissions": [
            {
              "permission": { "columns": ["account_id"], "filter": {} },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": { "columns": ["account_id"], "filter": {} },
              "role": "staff"
            }
          ],
          "table": { "name": "customer_statement_due", "schema": "customer" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "columns": ["id", "channel", "description"],
                "filter": { "id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "anonymous"
            },
            {
              "permission": {
                "columns": ["id", "channel", "description"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "columns": ["id", "channel", "description"],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": ["id", "channel", "description"],
                "filter": { "id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "onboarding_channels", "schema": "customer" }
        }
      ]
    },
    {
      "configuration": {
        "connection_info": {
          "database_url": { "from_env": "FINANCE_DB_URL" },
          "isolation_level": "read-committed",
          "pool_settings": { "connection_lifetime": 600 },
          "use_prepared_statements": false
        }
      },
      "kind": "postgres",
      "name": "finance",
      "tables": [
        {
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "document_number",
                  "account_id",
                  "due_date",
                  "preferred_payment_date",
                  "party_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "document_number",
                  "account_id",
                  "due_date",
                  "preferred_payment_date",
                  "party_id"
                ],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "expiring_invoice", "schema": "finance" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "document_number",
                  "account_id",
                  "due_date",
                  "party_id",
                  "preferred_payment_date"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "document_number",
                  "account_id",
                  "due_date",
                  "party_id",
                  "preferred_payment_date"
                ],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "invoice_preferred_date", "schema": "finance" }
        }
      ]
    },
    {
      "configuration": {
        "connection_info": {
          "database_url": { "from_env": "NOTIFICATIONS_DB_URL" },
          "isolation_level": "read-committed",
          "pool_settings": { "connection_lifetime": 600 },
          "use_prepared_statements": false
        }
      },
      "kind": "postgres",
      "name": "notifications",
      "tables": [
        {
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "notification_id",
                  "party_id",
                  "title",
                  "detail",
                  "target_url",
                  "new_window",
                  "severity",
                  "active",
                  "created_dtm",
                  "visible_dtm",
                  "ttl"
                ],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "notification_id",
                  "party_id",
                  "title",
                  "detail",
                  "target_url",
                  "new_window",
                  "severity",
                  "active",
                  "created_dtm",
                  "visible_dtm",
                  "ttl"
                ],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "party_notifications", "schema": "notification" }
        }
      ]
    },
    {
      "configuration": {
        "connection_info": {
          "database_url": { "from_env": "PARTY_DB_URL" },
          "isolation_level": "read-committed",
          "pool_settings": { "connection_lifetime": 600 },
          "use_prepared_statements": false
        }
      },
      "kind": "postgres",
      "name": "party",
      "tables": [
        {
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "email", "mobile_number"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "email", "mobile_number"],
                "filter": {
                  "_exists": {
                    "_table": { "name": "person", "schema": "party" },
                    "_where": {
                      "_and": [
                        { "party_id": { "_ceq": ["$", "party_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": ["party_id", "email", "mobile_number"],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "contact", "schema": "party" }
        },
        {
          "configuration": {
            "column_config": {
              "company_code": { "custom_name": "companyCode" },
              "created_dtm": { "custom_name": "createdDtm" },
              "deleted_dtm": { "custom_name": "deletedDtm" },
              "email_sent_dtm": { "custom_name": "emailSentDtm" },
              "family_name": { "custom_name": "familyName" },
              "full_name": { "custom_name": "fullName" },
              "given_name": { "custom_name": "givenName" },
              "onboarded_branch_code": { "custom_name": "onboardedBranchCode" },
              "onboarded_channel": { "custom_name": "onboardedChannel" },
              "person_id": { "custom_name": "personId" },
              "preferred_name": { "custom_name": "preferredName" },
              "updated_dtm": { "custom_name": "updatedDtm" }
            },
            "custom_column_names": {
              "company_code": "companyCode",
              "created_dtm": "createdDtm",
              "deleted_dtm": "deletedDtm",
              "email_sent_dtm": "emailSentDtm",
              "family_name": "familyName",
              "full_name": "fullName",
              "given_name": "givenName",
              "onboarded_branch_code": "onboardedBranchCode",
              "onboarded_channel": "onboardedChannel",
              "person_id": "personId",
              "preferred_name": "preferredName",
              "updated_dtm": "updatedDtm"
            },
            "custom_root_fields": {
              "select": "customerProfiles",
              "select_aggregate": "customerProfileAggregate"
            }
          },
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "person_id",
                  "full_name",
                  "given_name",
                  "family_name",
                  "preferred_name",
                  "email",
                  "onboarded_branch_code",
                  "onboarded_channel",
                  "email_sent_dtm",
                  "status",
                  "updated_dtm",
                  "created_dtm",
                  "company_code",
                  "deleted_dtm"
                ],
                "filter": {}
              },
              "role": "dh-snowflake-svc"
            }
          ],
          "table": { "name": "customer_profile", "schema": "party" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["id", "domain", "domain_desc"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["id", "domain", "domain_desc"],
                "filter": {}
              },
              "role": "staff"
            }
          ],
          "table": { "name": "nutrien_domains", "schema": "party" }
        },
        {
          "configuration": {
            "column_config": {
              "created_dtm": { "custom_name": "createdDtm" },
              "deleted_dtm": { "custom_name": "deletedDtm" },
              "person_id": { "custom_name": "personId" },
              "resource_id": { "custom_name": "resourceId" },
              "resource_type": { "custom_name": "resourceType" },
              "scope_id": { "custom_name": "scopeId" },
              "scope_type": { "custom_name": "scopeType" },
              "updated_dtm": { "custom_name": "updatedDtm" }
            },
            "custom_column_names": {
              "created_dtm": "createdDtm",
              "deleted_dtm": "deletedDtm",
              "person_id": "personId",
              "resource_id": "resourceId",
              "resource_type": "resourceType",
              "scope_id": "scopeId",
              "scope_type": "scopeType",
              "updated_dtm": "updatedDtm"
            },
            "custom_root_fields": {
              "select": "permission",
              "select_aggregate": "permissionAggregate"
            }
          },
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "person_id",
                  "resource_id",
                  "resource_type",
                  "permission",
                  "created_dtm",
                  "deleted_dtm",
                  "updated_dtm",
                  "scope_id",
                  "scope_type"
                ],
                "filter": {}
              },
              "role": "dh-snowflake-svc"
            }
          ],
          "table": { "name": "permissions", "schema": "party" }
        },
        {
          "array_relationships": [
            {
              "name": "party_person_contacts",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "party_id": "party_id" },
                  "remote_table": { "name": "contact", "schema": "party" }
                }
              }
            },
            {
              "name": "party_person_organisation_role",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "party_id": "party_id" },
                  "remote_table": {
                    "name": "person_organisation_role",
                    "schema": "party"
                  }
                }
              }
            }
          ],
          "remote_relationships": [
            {
              "definition": {
                "to_source": {
                  "field_mapping": { "onboarded_branch_code": "branch_code" },
                  "relationship_type": "object",
                  "source": "sords",
                  "table": { "name": "branch", "schema": "sords" }
                }
              },
              "name": "party_person_sords_onboarded_branch"
            },
            {
              "definition": {
                "to_source": {
                  "field_mapping": { "party_id": "party_id" },
                  "relationship_type": "array",
                  "source": "context",
                  "table": { "name": "user_context", "schema": "context" }
                }
              },
              "name": "party_person_user_context"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "party_id",
                  "full_name",
                  "given_name",
                  "family_name",
                  "preferred_name",
                  "status",
                  "created_dtm",
                  "login"
                ],
                "filter": {}
              },
              "role": "auth0-hook"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "party_id",
                  "full_name",
                  "given_name",
                  "family_name",
                  "preferred_name",
                  "login",
                  "onboarded_branch_code",
                  "onboarded_channel",
                  "auth_id",
                  "email_sent_dtm",
                  "status",
                  "updated_dtm"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "party_id",
                  "full_name",
                  "given_name",
                  "family_name",
                  "preferred_name",
                  "login",
                  "onboarded_branch_code",
                  "onboarded_channel",
                  "auth_id",
                  "email_sent_dtm",
                  "status",
                  "updated_dtm",
                  "created_dtm",
                  "company_code"
                ],
                "filter": { "company_code": { "_eq": "X-Hasura-Company-Code" } }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "party_id",
                  "full_name",
                  "given_name",
                  "family_name",
                  "preferred_name",
                  "login",
                  "onboarded_branch_code",
                  "onboarded_channel",
                  "auth_id",
                  "email_sent_dtm",
                  "status",
                  "updated_dtm",
                  "company_code"
                ],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "person", "schema": "party" }
        },
        {
          "object_relationships": [
            {
              "name": "party_org_role_person",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "party_id": "party_id" },
                  "remote_table": { "name": "person", "schema": "party" }
                }
              }
            }
          ],
          "remote_relationships": [
            {
              "definition": {
                "to_source": {
                  "field_mapping": { "uci_id": "uci_id" },
                  "relationship_type": "object",
                  "source": "sords",
                  "table": { "name": "uci_organisation", "schema": "sords" }
                }
              },
              "name": "party_person_organisation"
            }
          ],
          "select_permissions": [
            {
              "permission": { "columns": ["party_id", "role"], "filter": {} },
              "role": "auth0-hook"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "uci_id", "role"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "uci_id", "role"],
                "filter": {
                  "_exists": {
                    "_table": { "name": "person", "schema": "party" },
                    "_where": {
                      "_and": [
                        { "party_id": { "_ceq": ["$", "party_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": ["party_id", "uci_id", "role"],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "person_organisation_role", "schema": "party" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "party_id",
                  "resource_id",
                  "resource_type",
                  "permission"
                ],
                "filter": {}
              },
              "role": "auth0-hook"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "party_id",
                  "resource_id",
                  "resource_type",
                  "permission"
                ],
                "filter": {
                  "_and": [
                    {
                      "_or": [
                        { "account_classification": { "_is_null": true } },
                        { "account_classification": { "_nin": ["03", "04"] } }
                      ]
                    },
                    {
                      "_exists": {
                        "_table": { "name": "person", "schema": "party" },
                        "_where": {
                          "_and": [
                            { "party_id": { "_ceq": ["$", "party_id"] } },
                            {
                              "company_code": { "_eq": "X-Hasura-Company-Code" }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "party_id",
                  "resource_id",
                  "resource_type",
                  "permission"
                ],
                "filter": { "party_id": { "_eq": "X-Hasura-User-Id" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "person_permission", "schema": "party" }
        },
        {
          "configuration": {
            "column_config": {
              "created_dtm": { "custom_name": "createdDtm" },
              "deleted_dtm": { "custom_name": "deletedDtm" },
              "person_id": { "custom_name": "personId" },
              "scope_id": { "custom_name": "scopeId" },
              "scope_type": { "custom_name": "scopeType" },
              "uci_id": { "custom_name": "uciId" },
              "updated_dtm": { "custom_name": "updatedDtm" }
            },
            "custom_column_names": {
              "created_dtm": "createdDtm",
              "deleted_dtm": "deletedDtm",
              "person_id": "personId",
              "scope_id": "scopeId",
              "scope_type": "scopeType",
              "uci_id": "uciId",
              "updated_dtm": "updatedDtm"
            },
            "custom_root_fields": {
              "select": "role",
              "select_aggregate": "roleAggregate"
            }
          },
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "person_id",
                  "uci_id",
                  "role",
                  "created_dtm",
                  "deleted_dtm",
                  "updated_dtm",
                  "scope_id",
                  "scope_type"
                ],
                "filter": {}
              },
              "role": "dh-snowflake-svc"
            }
          ],
          "table": { "name": "roles", "schema": "party" }
        },
        {
          "object_relationships": [
            {
              "name": "party_search_person",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "party_id": "party_id" },
                  "remote_table": { "name": "person", "schema": "party" }
                }
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "party_id",
                  "full_name",
                  "registration_status",
                  "domicile_branch_code",
                  "person_search_index"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "person", "schema": "party" },
                    "_where": {
                      "_and": [
                        { "party_id": { "_ceq": ["$", "party_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            }
          ],
          "table": { "name": "search_person", "schema": "party" }
        }
      ]
    },
    {
      "configuration": {
        "connection_info": {
          "database_url": { "from_env": "SAMPLING_DB_URL" },
          "isolation_level": "read-committed",
          "pool_settings": { "connection_lifetime": 600 },
          "use_prepared_statements": false
        }
      },
      "kind": "postgres",
      "name": "sampling",
      "tables": [
        {
          "array_relationships": [
            {
              "name": "branches",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "address_id",
                  "table": { "name": "branch", "schema": "sampling" }
                }
              }
            },
            {
              "name": "interpretation_services",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "address_id",
                  "table": {
                    "name": "interpretation_service",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "laboratories",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "address_id",
                  "table": { "name": "laboratory", "schema": "sampling" }
                }
              }
            },
            {
              "name": "users",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "address_id",
                  "table": { "name": "user", "schema": "sampling" }
                }
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "city",
                  "country",
                  "postcode",
                  "region",
                  "street1",
                  "street2",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "city",
                  "country",
                  "postcode",
                  "region",
                  "street1",
                  "street2",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "address", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "branch_clients",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "branch_id",
                  "table": { "name": "branch_client", "schema": "sampling" }
                }
              }
            },
            {
              "name": "branch_laboratories",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "branch_id",
                  "table": { "name": "branch_laboratory", "schema": "sampling" }
                }
              }
            },
            {
              "name": "branch_users",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "branch_id",
                  "table": { "name": "branch_user", "schema": "sampling" }
                }
              }
            },
            {
              "name": "jobs",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "branch_id",
                  "table": { "name": "job", "schema": "sampling" }
                }
              }
            },
            {
              "name": "users",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "primary_branch_id",
                  "table": { "name": "user", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "address",
              "using": { "foreign_key_constraint_on": "address_id" }
            },
            {
              "name": "user",
              "using": { "foreign_key_constraint_on": "updated_by_user_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "location",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "address_id",
                  "id",
                  "updated_by_user_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "location",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "address_id",
                  "id",
                  "updated_by_user_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "branch", "schema": "sampling" }
        },
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "id",
                  "client_account_number",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "id",
                  "client_account_number",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "branch",
              "using": { "foreign_key_constraint_on": "branch_id" }
            },
            {
              "name": "client",
              "using": { "foreign_key_constraint_on": "client_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "id",
                  "client_account_number",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "id",
                  "client_account_number",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "branch_client", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "id",
                  "client_account_number",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "id",
                  "client_account_number",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ]
        },
        {
          "object_relationships": [
            {
              "name": "branch",
              "using": { "foreign_key_constraint_on": "branch_id" }
            },
            {
              "name": "laboratory",
              "using": { "foreign_key_constraint_on": "laboratory_id" }
            }
          ],
          "table": { "name": "branch_laboratory", "schema": "sampling" }
        },
        {
          "object_relationships": [
            {
              "name": "branch",
              "using": { "foreign_key_constraint_on": "branch_id" }
            },
            {
              "name": "user",
              "using": { "foreign_key_constraint_on": "user_id" }
            }
          ],
          "table": { "name": "branch_user", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "branch_clients",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "client_id",
                  "table": { "name": "branch_client", "schema": "sampling" }
                }
              }
            },
            {
              "name": "client_users",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "client_id",
                  "table": { "name": "client_user", "schema": "sampling" }
                }
              }
            },
            {
              "name": "farms",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "client_id",
                  "table": { "name": "farm", "schema": "sampling" }
                }
              }
            },
            {
              "name": "jobs",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "client_id",
                  "table": { "name": "job", "schema": "sampling" }
                }
              }
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ]
              },
              "role": "user"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "client", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ]
        },
        {
          "object_relationships": [
            {
              "name": "client",
              "using": { "foreign_key_constraint_on": "client_id" }
            },
            {
              "name": "user",
              "using": { "foreign_key_constraint_on": "authorized_by_user_id" }
            },
            {
              "name": "userByUserId",
              "using": { "foreign_key_constraint_on": "user_id" }
            }
          ],
          "table": { "name": "client_user", "schema": "sampling" }
        },
        {
          "object_relationships": [
            {
              "name": "crop",
              "using": { "foreign_key_constraint_on": "crop_id" }
            },
            {
              "name": "growth_stage",
              "using": { "foreign_key_constraint_on": "growth_stage_id" }
            },
            {
              "name": "plant_part",
              "using": { "foreign_key_constraint_on": "plant_part_id" }
            },
            {
              "name": "sample_type",
              "using": { "foreign_key_constraint_on": "sample_type_id" }
            },
            {
              "name": "test_method",
              "using": { "foreign_key_constraint_on": "test_method_id" }
            }
          ],
          "table": { "name": "criteria_breakpoint", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "criteria_breakpoints",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "crop_id",
                  "table": {
                    "name": "criteria_breakpoint",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "growth_stages",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "crop_id",
                  "table": { "name": "growth_stage", "schema": "sampling" }
                }
              }
            },
            {
              "name": "paddock_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "crop_id",
                  "table": { "name": "paddock_event", "schema": "sampling" }
                }
              }
            },
            {
              "name": "root_stocks",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "crop_id",
                  "table": { "name": "root_stock", "schema": "sampling" }
                }
              }
            },
            {
              "name": "samples",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "crop_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            },
            {
              "name": "varieties",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "crop_id",
                  "table": { "name": "variety", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "interpretation_service",
              "using": {
                "foreign_key_constraint_on": "interpretation_service_id"
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "crop", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "paddocks",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "farm_id",
                  "table": { "name": "paddock", "schema": "sampling" }
                }
              }
            },
            {
              "name": "sites",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "farm_id",
                  "table": { "name": "site", "schema": "sampling" }
                }
              }
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "client_id",
                  "id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "client_id",
                  "id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "client",
              "using": { "foreign_key_constraint_on": "client_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "client_id",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "client_id",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "farm", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "client_id",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "client_id",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ]
        },
        {
          "array_relationships": [
            {
              "name": "criteria_breakpoints",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "growth_stage_id",
                  "table": {
                    "name": "criteria_breakpoint",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "growth_stage_plant_parts",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "growth_stage_id",
                  "table": {
                    "name": "growth_stage_plant_part",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "samples",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "growth_stage_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            },
            {
              "name": "samples_by_actual_growth_stage",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "actual_growth_stage_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "crop",
              "using": { "foreign_key_constraint_on": "crop_id" }
            },
            {
              "name": "interpretation_service",
              "using": {
                "foreign_key_constraint_on": "interpretation_service_id"
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "name",
                  "bbch_from",
                  "bbch_to",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "crop_id",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "name",
                  "bbch_from",
                  "bbch_to",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "crop_id",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "growth_stage", "schema": "sampling" }
        },
        {
          "object_relationships": [
            {
              "name": "growth_stage",
              "using": { "foreign_key_constraint_on": "growth_stage_id" }
            },
            {
              "name": "plant_part",
              "using": { "foreign_key_constraint_on": "plant_part_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "id",
                  "growth_stage_id",
                  "plant_part_id",
                  "is_deleted",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "growth_stage_id",
                  "id",
                  "plant_part_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "growth_stage_plant_part", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "crops",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "interpretation_service_id",
                  "table": { "name": "crop", "schema": "sampling" }
                }
              }
            },
            {
              "name": "growth_stages",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "interpretation_service_id",
                  "table": { "name": "growth_stage", "schema": "sampling" }
                }
              }
            },
            {
              "name": "jobs",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "interpretation_service_id",
                  "table": { "name": "job", "schema": "sampling" }
                }
              }
            },
            {
              "name": "plant_parts",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "interpretation_service_id",
                  "table": { "name": "plant_part", "schema": "sampling" }
                }
              }
            },
            {
              "name": "root_stocks",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "interpretation_service_id",
                  "table": { "name": "root_stock", "schema": "sampling" }
                }
              }
            },
            {
              "name": "varieties",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "interpretation_service_id",
                  "table": { "name": "variety", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "address",
              "using": { "foreign_key_constraint_on": "address_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "id",
                  "name",
                  "description",
                  "url",
                  "address_id",
                  "is_deleted",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "description",
                  "name",
                  "url",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "address_id",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "interpretation_service", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "job_status_histories",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "job_id",
                  "table": {
                    "name": "job_status_history",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "job_users",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "job_id",
                  "table": { "name": "job_user", "schema": "sampling" }
                }
              }
            },
            {
              "name": "paddock_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "job_id",
                  "table": { "name": "paddock_event", "schema": "sampling" }
                }
              }
            },
            {
              "name": "site_sample_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "job_id",
                  "table": { "name": "site_sample_event", "schema": "sampling" }
                }
              }
            }
          ],
          "event_triggers": [
            {
              "definition": {
                "enable_manual": false,
                "update": { "columns": ["status"] }
              },
              "headers": [
                {
                  "name": "x-hasura-webhook-secret",
                  "value_from_env": "HASURA_SAMPLING_WEBHOOK_SECRET"
                }
              ],
              "name": "job-status-updated",
              "retry_conf": {
                "interval_sec": 15,
                "num_retries": 3,
                "timeout_sec": 100
              },
              "webhook_from_env": "HASURA_SAMPLING_WEBHOOK_ENDPOINT"
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "interpretation_service_assets",
                  "is_deleted",
                  "is_planned",
                  "external_submission_id",
                  "name",
                  "purchase_order",
                  "sampling_strategy",
                  "status",
                  "type",
                  "notes",
                  "created_dtm",
                  "planned_sampling_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id",
                  "id",
                  "interpretation_service_id",
                  "laboratory_id",
                  "sample_type_id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "interpretation_service_assets",
                  "is_deleted",
                  "is_planned",
                  "external_submission_id",
                  "name",
                  "purchase_order",
                  "sampling_strategy",
                  "status",
                  "type",
                  "notes",
                  "created_dtm",
                  "planned_sampling_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id",
                  "id",
                  "interpretation_service_id",
                  "laboratory_id",
                  "sample_type_id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "branch",
              "using": { "foreign_key_constraint_on": "branch_id" }
            },
            {
              "name": "client",
              "using": { "foreign_key_constraint_on": "client_id" }
            },
            {
              "name": "interpretation_service",
              "using": {
                "foreign_key_constraint_on": "interpretation_service_id"
              }
            },
            {
              "name": "laboratory",
              "using": { "foreign_key_constraint_on": "laboratory_id" }
            },
            {
              "name": "sample_type",
              "using": { "foreign_key_constraint_on": "sample_type_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "interpretation_service_assets",
                  "is_deleted",
                  "is_planned",
                  "external_submission_id",
                  "name",
                  "purchase_order",
                  "sampling_strategy",
                  "status",
                  "type",
                  "notes",
                  "created_dtm",
                  "planned_sampling_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id",
                  "id",
                  "interpretation_service_id",
                  "laboratory_id",
                  "sample_type_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job_users": {
                        "user": { "email": { "_eq": "x-hasura-user-email" } }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "interpretation_service_assets",
                  "is_deleted",
                  "is_planned",
                  "external_submission_id",
                  "name",
                  "purchase_order",
                  "sampling_strategy",
                  "status",
                  "type",
                  "notes",
                  "created_dtm",
                  "planned_sampling_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id",
                  "id",
                  "interpretation_service_id",
                  "laboratory_id",
                  "sample_type_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job_users": {
                        "user": { "email": { "_eq": "x-hasura-user-email" } }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "job", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job_users": {
                        "user": { "email": { "_eq": "x-hasura-user-email" } }
                      }
                    }
                  ]
                },
                "columns": [
                  "interpretation_service_assets",
                  "is_deleted",
                  "is_planned",
                  "external_submission_id",
                  "name",
                  "purchase_order",
                  "sampling_strategy",
                  "status",
                  "type",
                  "notes",
                  "created_dtm",
                  "planned_sampling_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id",
                  "id",
                  "interpretation_service_id",
                  "laboratory_id",
                  "sample_type_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job_users": {
                        "user": { "email": { "_eq": "x-hasura-user-email" } }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job_users": {
                        "user": { "email": { "_eq": "x-hasura-user-email" } }
                      }
                    }
                  ]
                },
                "columns": [
                  "interpretation_service_assets",
                  "is_deleted",
                  "is_planned",
                  "external_submission_id",
                  "name",
                  "purchase_order",
                  "sampling_strategy",
                  "status",
                  "type",
                  "notes",
                  "created_dtm",
                  "planned_sampling_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "branch_id",
                  "client_id",
                  "id",
                  "interpretation_service_id",
                  "laboratory_id",
                  "sample_type_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job_users": {
                        "user": { "email": { "_eq": "x-hasura-user-email" } }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "event_triggers": [
            {
              "definition": {
                "enable_manual": false,
                "insert": { "columns": "*" }
              },
              "headers": [
                {
                  "name": "x-hasura-webhook-secret",
                  "value_from_env": "HASURA_SAMPLING_WEBHOOK_SECRET"
                }
              ],
              "name": "job-status-history-created",
              "retry_conf": {
                "interval_sec": 15,
                "num_retries": 3,
                "timeout_sec": 100
              },
              "webhook_from_env": "HASURA_SAMPLING_WEBHOOK_ENDPOINT"
            },
            {
              "definition": {
                "enable_manual": false,
                "insert": { "columns": "*" }
              },
              "headers": [
                {
                  "name": "x-hasura-webhook-secret",
                  "value_from_env": "HASURA_SAMPLING_WEBHOOK_SECRET"
                }
              ],
              "name": "job-status-history-created-apal-submit",
              "retry_conf": {
                "interval_sec": 15,
                "num_retries": 3,
                "timeout_sec": 100
              },
              "webhook_from_env": "HASURA_SAMPLING_WEBHOOK_ENDPOINT"
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "new_status",
                  "old_status",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "updated_by_user_id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "new_status",
                  "old_status",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "updated_by_user_id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "job",
              "using": { "foreign_key_constraint_on": "job_id" }
            },
            {
              "name": "user",
              "using": { "foreign_key_constraint_on": "updated_by_user_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "new_status",
                  "old_status",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "updated_by_user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "new_status",
                  "old_status",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "updated_by_user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "job_status_history", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "new_status",
                  "old_status",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "updated_by_user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "new_status",
                  "old_status",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "updated_by_user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "id",
                  "role",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "job_id",
                  "user_id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "id",
                  "role",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "job_id",
                  "user_id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "job",
              "using": { "foreign_key_constraint_on": "job_id" }
            },
            {
              "name": "user",
              "using": { "foreign_key_constraint_on": "user_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "id",
                  "role",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "job_id",
                  "user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "id",
                  "role",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "job_id",
                  "user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "job_user", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "_and": [
                            {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            },
                            { "role": { "_in": ["ADVISOR", "PLANNER"] } }
                          ]
                        }
                      }
                    }
                  ]
                },
                "columns": [
                  "is_deleted",
                  "id",
                  "role",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "job_id",
                  "user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "_and": [
                            {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            },
                            { "role": { "_in": ["ADVISOR", "PLANNER"] } }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "_and": [
                            {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            },
                            { "role": { "_in": ["ADVISOR", "PLANNER"] } }
                          ]
                        }
                      }
                    }
                  ]
                },
                "columns": [
                  "is_deleted",
                  "id",
                  "role",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "job_id",
                  "user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "_and": [
                            {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            },
                            { "role": { "_in": ["ADVISOR", "PLANNER"] } }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "array_relationships": [
            {
              "name": "branch_laboratories",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "laboratory_id",
                  "table": { "name": "branch_laboratory", "schema": "sampling" }
                }
              }
            },
            {
              "name": "jobs",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "laboratory_id",
                  "table": { "name": "job", "schema": "sampling" }
                }
              }
            },
            {
              "name": "sample_types",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "laboratory_id",
                  "table": { "name": "sample_type", "schema": "sampling" }
                }
              }
            },
            {
              "name": "test_methods",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "laboratory_id",
                  "table": { "name": "test_method", "schema": "sampling" }
                }
              }
            },
            {
              "name": "test_sets",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "laboratory_id",
                  "table": { "name": "test_set", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "address",
              "using": { "foreign_key_constraint_on": "address_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "description",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "address_id",
                  "has_purchase_order",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "description",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "address_id",
                  "has_purchase_order",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "laboratory", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "sample_results",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "modus_test_id",
                  "table": { "name": "sample_result", "schema": "sampling" }
                }
              }
            },
            {
              "name": "test_methods",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "modus_test_id",
                  "table": { "name": "test_method", "schema": "sampling" }
                }
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "modus_test_id",
                  "type",
                  "available_uom",
                  "common_name",
                  "extraction",
                  "item_name",
                  "measurement_method",
                  "primary_uom",
                  "wera_id",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "modus_test_id",
                  "type",
                  "available_uom",
                  "common_name",
                  "extraction",
                  "item_name",
                  "measurement_method",
                  "primary_uom",
                  "wera_id",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "modus_test", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "paddock_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "paddock_id",
                  "table": { "name": "paddock_event", "schema": "sampling" }
                }
              }
            },
            {
              "name": "site_sample_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "paddock_id",
                  "table": { "name": "site_sample_event", "schema": "sampling" }
                }
              }
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "farm",
              "using": { "foreign_key_constraint_on": "farm_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "paddock", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "object_relationships": [
            {
              "name": "crop",
              "using": { "foreign_key_constraint_on": "crop_id" }
            },
            {
              "name": "job",
              "using": { "foreign_key_constraint_on": "job_id" }
            },
            {
              "name": "paddock",
              "using": { "foreign_key_constraint_on": "paddock_id" }
            },
            {
              "name": "root_stock",
              "using": { "foreign_key_constraint_on": "root_stock_id" }
            },
            {
              "name": "variety",
              "using": { "foreign_key_constraint_on": "variety_id" }
            }
          ],
          "table": { "name": "paddock_event", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "criteria_breakpoints",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "plant_part_id",
                  "table": {
                    "name": "criteria_breakpoint",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "growth_stage_plant_parts",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "plant_part_id",
                  "table": {
                    "name": "growth_stage_plant_part",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "samples",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "plant_part_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "interpretation_service",
              "using": {
                "foreign_key_constraint_on": "interpretation_service_id"
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "alias",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "alias",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "plant_part", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "recommendations",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "product_id",
                  "table": { "name": "recommendation", "schema": "sampling" }
                }
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "b",
                  "ca",
                  "cu",
                  "k",
                  "mg",
                  "mn",
                  "mo",
                  "n",
                  "neutralizing_value",
                  "p",
                  "s",
                  "se",
                  "size_from",
                  "size_to",
                  "zn",
                  "bulk_density",
                  "description",
                  "logo_image_url",
                  "name",
                  "place",
                  "timing",
                  "unit",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "b",
                  "ca",
                  "cu",
                  "k",
                  "mg",
                  "mn",
                  "mo",
                  "n",
                  "neutralizing_value",
                  "p",
                  "s",
                  "se",
                  "size_from",
                  "size_to",
                  "zn",
                  "bulk_density",
                  "description",
                  "logo_image_url",
                  "name",
                  "place",
                  "timing",
                  "unit",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "product", "schema": "sampling" }
        },
        {
          "object_relationships": [
            {
              "name": "product",
              "using": { "foreign_key_constraint_on": "product_id" }
            },
            {
              "name": "sample",
              "using": { "foreign_key_constraint_on": "sample_id" }
            },
            {
              "name": "sample_type",
              "using": { "foreign_key_constraint_on": "sample_type_id" }
            }
          ],
          "table": { "name": "recommendation", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "paddock_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "root_stock_id",
                  "table": { "name": "paddock_event", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "crop",
              "using": { "foreign_key_constraint_on": "crop_id" }
            },
            {
              "name": "interpretation_service",
              "using": {
                "foreign_key_constraint_on": "interpretation_service_id"
              }
            }
          ],
          "table": { "name": "root_stock", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "recommendations",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_id",
                  "table": { "name": "recommendation", "schema": "sampling" }
                }
              }
            },
            {
              "name": "sample_results",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_id",
                  "table": { "name": "sample_result", "schema": "sampling" }
                }
              }
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "actual_growth_stage_id",
                  "analysed_dtm",
                  "barcode",
                  "created_dtm",
                  "crop_id",
                  "depth_from",
                  "depth_to",
                  "extra_test_method_ids",
                  "growth_stage_id",
                  "has_stubble",
                  "id",
                  "interpretive_criteria",
                  "is_deleted",
                  "is_planned",
                  "laboratory_reference_id",
                  "plant_count",
                  "plant_density",
                  "plant_part_id",
                  "sample_event_id",
                  "sample_type_id",
                  "sampling_strategy",
                  "site_id",
                  "status",
                  "submitted_dtm",
                  "test_set_id",
                  "updated_dtm",
                  "id_updated_dtm"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "actual_growth_stage_id",
                  "analysed_dtm",
                  "barcode",
                  "created_dtm",
                  "crop_id",
                  "depth_from",
                  "depth_to",
                  "extra_test_method_ids",
                  "growth_stage_id",
                  "has_stubble",
                  "id",
                  "interpretive_criteria",
                  "is_deleted",
                  "is_planned",
                  "laboratory_reference_id",
                  "plant_count",
                  "plant_density",
                  "plant_part_id",
                  "sample_event_id",
                  "sample_type_id",
                  "sampling_strategy",
                  "site_id",
                  "status",
                  "submitted_dtm",
                  "test_set_id",
                  "updated_dtm",
                  "id_updated_dtm"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "actual_growth_stage",
              "using": { "foreign_key_constraint_on": "actual_growth_stage_id" }
            },
            {
              "name": "crop",
              "using": { "foreign_key_constraint_on": "crop_id" }
            },
            {
              "name": "growth_stage",
              "using": { "foreign_key_constraint_on": "growth_stage_id" }
            },
            {
              "name": "plant_part",
              "using": { "foreign_key_constraint_on": "plant_part_id" }
            },
            {
              "name": "sample_type",
              "using": { "foreign_key_constraint_on": "sample_type_id" }
            },
            {
              "name": "site",
              "using": { "foreign_key_constraint_on": "site_id" }
            },
            {
              "name": "site_sample_event",
              "using": { "foreign_key_constraint_on": "sample_event_id" }
            },
            {
              "name": "test_set",
              "using": { "foreign_key_constraint_on": "test_set_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "actual_growth_stage_id",
                  "analysed_dtm",
                  "barcode",
                  "created_dtm",
                  "crop_id",
                  "depth_from",
                  "depth_to",
                  "extra_test_method_ids",
                  "growth_stage_id",
                  "has_stubble",
                  "id",
                  "interpretive_criteria",
                  "is_deleted",
                  "is_planned",
                  "laboratory_reference_id",
                  "plant_count",
                  "plant_density",
                  "plant_part_id",
                  "sample_event_id",
                  "sample_type_id",
                  "sampling_strategy",
                  "site_id",
                  "status",
                  "submitted_dtm",
                  "test_set_id",
                  "updated_dtm",
                  "id_updated_dtm"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_event": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "actual_growth_stage_id",
                  "analysed_dtm",
                  "barcode",
                  "created_dtm",
                  "crop_id",
                  "depth_from",
                  "depth_to",
                  "extra_test_method_ids",
                  "growth_stage_id",
                  "has_stubble",
                  "id",
                  "interpretive_criteria",
                  "is_deleted",
                  "is_planned",
                  "laboratory_reference_id",
                  "plant_count",
                  "plant_density",
                  "plant_part_id",
                  "sample_event_id",
                  "sample_type_id",
                  "sampling_strategy",
                  "site_id",
                  "status",
                  "submitted_dtm",
                  "test_set_id",
                  "updated_dtm",
                  "id_updated_dtm"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_event": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "sample", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "actual_growth_stage_id",
                  "analysed_dtm",
                  "barcode",
                  "created_dtm",
                  "crop_id",
                  "depth_from",
                  "depth_to",
                  "extra_test_method_ids",
                  "growth_stage_id",
                  "has_stubble",
                  "id",
                  "interpretive_criteria",
                  "is_deleted",
                  "is_planned",
                  "laboratory_reference_id",
                  "plant_count",
                  "plant_density",
                  "plant_part_id",
                  "sample_event_id",
                  "sample_type_id",
                  "sampling_strategy",
                  "site_id",
                  "status",
                  "submitted_dtm",
                  "test_set_id",
                  "updated_dtm",
                  "id_updated_dtm"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_event": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "actual_growth_stage_id",
                  "analysed_dtm",
                  "barcode",
                  "created_dtm",
                  "crop_id",
                  "depth_from",
                  "depth_to",
                  "extra_test_method_ids",
                  "growth_stage_id",
                  "has_stubble",
                  "id",
                  "interpretive_criteria",
                  "is_deleted",
                  "is_planned",
                  "laboratory_reference_id",
                  "plant_count",
                  "plant_density",
                  "plant_part_id",
                  "sample_event_id",
                  "sample_type_id",
                  "sampling_strategy",
                  "site_id",
                  "status",
                  "submitted_dtm",
                  "test_set_id",
                  "updated_dtm",
                  "id_updated_dtm"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_event": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "object_relationships": [
            {
              "name": "modus_test",
              "using": { "foreign_key_constraint_on": "modus_test_id" }
            },
            {
              "name": "sample",
              "using": { "foreign_key_constraint_on": "sample_id" }
            },
            {
              "name": "test_method",
              "using": { "foreign_key_constraint_on": "test_method_id" }
            },
            {
              "name": "user",
              "using": { "foreign_key_constraint_on": "updated_by_user_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "description",
                  "name",
                  "unit",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "sample_id",
                  "test_method_id",
                  "updated_by_user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "sample": {
                        "site_sample_event": {
                          "job": {
                            "job_users": {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "description",
                  "name",
                  "unit",
                  "value",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "sample_id",
                  "test_method_id",
                  "updated_by_user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "sample": {
                        "site_sample_event": {
                          "job": {
                            "job_users": {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "sample_result", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "criteria_breakpoints",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_type_id",
                  "table": {
                    "name": "criteria_breakpoint",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "jobs",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_type_id",
                  "table": { "name": "job", "schema": "sampling" }
                }
              }
            },
            {
              "name": "recommendations",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_type_id",
                  "table": { "name": "recommendation", "schema": "sampling" }
                }
              }
            },
            {
              "name": "samples",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_type_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            },
            {
              "name": "test_sets",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_type_id",
                  "table": { "name": "test_set", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "laboratory",
              "using": { "foreign_key_constraint_on": "laboratory_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "id",
                  "name",
                  "laboratory_id",
                  "laboratory_external_id",
                  "laboratory_code",
                  "laboratory_description",
                  "is_deleted",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "type"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "type",
                  "laboratory_code",
                  "laboratory_description",
                  "laboratory_external_id",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "laboratory_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "sample_type", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "samples",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "site_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            },
            {
              "name": "site_locations",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "site_id",
                  "table": { "name": "site_location", "schema": "sampling" }
                }
              }
            },
            {
              "name": "site_sample_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "site_id",
                  "table": { "name": "site_sample_event", "schema": "sampling" }
                }
              }
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "farm",
              "using": { "foreign_key_constraint_on": "farm_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "site", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "farm_id",
                  "id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site_sample_events": {
                        "job": {
                          "job_users": {
                            "user": {
                              "email": { "_eq": "x-hasura-user-email" }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "geohash",
                  "point",
                  "collected",
                  "collected_dtm",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "site_id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_deleted",
                  "geohash",
                  "point",
                  "collected",
                  "collected_dtm",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "site_id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "site",
              "using": { "foreign_key_constraint_on": "site_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "geohash",
                  "point",
                  "collected",
                  "collected_dtm",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site": {
                        "site_sample_events": {
                          "job": {
                            "job_users": {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "geohash",
                  "point",
                  "collected",
                  "collected_dtm",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site": {
                        "site_sample_events": {
                          "job": {
                            "job_users": {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "site_location", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "geohash",
                  "point",
                  "collected",
                  "collected_dtm",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site": {
                        "site_sample_events": {
                          "job": {
                            "job_users": {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "geohash",
                  "point",
                  "collected",
                  "collected_dtm",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "site": {
                        "site_sample_events": {
                          "job": {
                            "job_users": {
                              "user": {
                                "email": { "_eq": "x-hasura-user-email" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "array_relationships": [
            {
              "name": "samples",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sample_event_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "is_planned",
                  "notes",
                  "other_info",
                  "sampling_strategy",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "paddock_id",
                  "sampler_id",
                  "site_id"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {},
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "is_planned",
                  "notes",
                  "other_info",
                  "sampling_strategy",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "paddock_id",
                  "sampler_id",
                  "site_id"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "job",
              "using": { "foreign_key_constraint_on": "job_id" }
            },
            {
              "name": "paddock",
              "using": { "foreign_key_constraint_on": "paddock_id" }
            },
            {
              "name": "site",
              "using": { "foreign_key_constraint_on": "site_id" }
            },
            {
              "name": "user",
              "using": { "foreign_key_constraint_on": "sampler_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "is_planned",
                  "notes",
                  "other_info",
                  "sampling_strategy",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "paddock_id",
                  "sampler_id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "is_planned",
                  "notes",
                  "other_info",
                  "sampling_strategy",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "paddock_id",
                  "sampler_id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "site_sample_event", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "is_planned",
                  "notes",
                  "other_info",
                  "sampling_strategy",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "paddock_id",
                  "sampler_id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "asset_ids",
                  "is_deleted",
                  "is_planned",
                  "notes",
                  "other_info",
                  "sampling_strategy",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "job_id",
                  "paddock_id",
                  "sampler_id",
                  "site_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": { "name": "user", "schema": "sampling" },
                        "_where": {
                          "_and": [
                            { "email": { "_eq": "x-hasura-user-email" } },
                            { "role": { "_in": ["ADMIN"] } }
                          ]
                        }
                      }
                    },
                    {
                      "job": {
                        "job_users": {
                          "user": { "email": { "_eq": "x-hasura-user-email" } }
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "array_relationships": [
            {
              "name": "criteria_breakpoints",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "test_method_id",
                  "table": {
                    "name": "criteria_breakpoint",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "sample_results",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "test_method_id",
                  "table": { "name": "sample_result", "schema": "sampling" }
                }
              }
            },
            {
              "name": "test_set_methods",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "test_method_id",
                  "table": { "name": "test_set_method", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "laboratory",
              "using": { "foreign_key_constraint_on": "laboratory_id" }
            },
            {
              "name": "modus_test",
              "using": { "foreign_key_constraint_on": "modus_test_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "extraction",
                  "laboratory_code",
                  "laboratory_description",
                  "laboratory_external_id",
                  "limit_of_reporting",
                  "method_code",
                  "method_description",
                  "method_url",
                  "name",
                  "unit",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "laboratory_id",
                  "modus_test_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "extraction",
                  "laboratory_code",
                  "laboratory_description",
                  "laboratory_external_id",
                  "limit_of_reporting",
                  "method_code",
                  "method_description",
                  "method_url",
                  "name",
                  "unit",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "laboratory_id",
                  "modus_test_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "test_method", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "samples",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "test_set_id",
                  "table": { "name": "sample", "schema": "sampling" }
                }
              }
            },
            {
              "name": "test_set_methods",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "test_set_id",
                  "table": { "name": "test_set_method", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "laboratory",
              "using": { "foreign_key_constraint_on": "laboratory_id" }
            },
            {
              "name": "sample_type",
              "using": { "foreign_key_constraint_on": "sample_type_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "is_extra",
                  "laboratory_code",
                  "laboratory_description",
                  "laboratory_external_id",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "laboratory_id",
                  "sample_type_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "is_extra",
                  "laboratory_code",
                  "laboratory_description",
                  "laboratory_external_id",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "id",
                  "laboratory_id",
                  "sample_type_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "test_set", "schema": "sampling" }
        },
        {
          "object_relationships": [
            {
              "name": "test_method",
              "using": { "foreign_key_constraint_on": "test_method_id" }
            },
            {
              "name": "test_set",
              "using": { "foreign_key_constraint_on": "test_set_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "id",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "test_method_id",
                  "test_set_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "id",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "test_method_id",
                  "test_set_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "test_set_method", "schema": "sampling" }
        },
        {
          "array_relationships": [
            {
              "name": "branch_users",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "user_id",
                  "table": { "name": "branch_user", "schema": "sampling" }
                }
              }
            },
            {
              "name": "branches",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "updated_by_user_id",
                  "table": { "name": "branch", "schema": "sampling" }
                }
              }
            },
            {
              "name": "clientUsersByUserId",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "user_id",
                  "table": { "name": "client_user", "schema": "sampling" }
                }
              }
            },
            {
              "name": "client_users",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "authorized_by_user_id",
                  "table": { "name": "client_user", "schema": "sampling" }
                }
              }
            },
            {
              "name": "jobUsersByUserId",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "user_id",
                  "table": { "name": "job_user", "schema": "sampling" }
                }
              }
            },
            {
              "name": "job_status_histories",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "updated_by_user_id",
                  "table": {
                    "name": "job_status_history",
                    "schema": "sampling"
                  }
                }
              }
            },
            {
              "name": "sample_results",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "updated_by_user_id",
                  "table": { "name": "sample_result", "schema": "sampling" }
                }
              }
            },
            {
              "name": "site_sample_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "sampler_id",
                  "table": { "name": "site_sample_event", "schema": "sampling" }
                }
              }
            }
          ],
          "insert_permissions": [
            {
              "permission": {
                "check": {
                  "_exists": {
                    "_table": { "name": "user", "schema": "sampling" },
                    "_where": {
                      "_and": [
                        { "email": { "_eq": "x-hasura-user-email" } },
                        { "role": { "_in": ["ADMIN"] } }
                      ]
                    }
                  }
                },
                "columns": [
                  "id",
                  "region",
                  "division",
                  "personnel_number",
                  "status",
                  "first_name",
                  "last_name",
                  "phone_mobile",
                  "phone_work",
                  "email",
                  "title",
                  "title_family",
                  "start_date",
                  "end_date",
                  "domiciled_site_id",
                  "address_id",
                  "is_advisor",
                  "is_deleted",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "primary_branch_id",
                  "user_code",
                  "role"
                ]
              },
              "role": "staff"
            },
            {
              "permission": {
                "check": {
                  "_exists": {
                    "_table": { "name": "user", "schema": "sampling" },
                    "_where": {
                      "_and": [
                        { "email": { "_eq": "x-hasura-user-email" } },
                        { "role": { "_in": ["ADMIN"] } }
                      ]
                    }
                  }
                },
                "columns": [
                  "address_id",
                  "created_dtm",
                  "personnel_number",
                  "domiciled_site_id",
                  "email",
                  "end_date",
                  "first_name",
                  "id",
                  "is_deleted",
                  "is_advisor",
                  "last_name",
                  "phone_mobile",
                  "phone_work",
                  "primary_branch_id",
                  "region",
                  "division",
                  "start_date",
                  "status",
                  "title",
                  "title_family",
                  "updated_dtm",
                  "id_updated_dtm",
                  "role",
                  "user_code"
                ]
              },
              "role": "user"
            }
          ],
          "object_relationships": [
            {
              "name": "address",
              "using": { "foreign_key_constraint_on": "address_id" }
            },
            {
              "name": "branch",
              "using": { "foreign_key_constraint_on": "primary_branch_id" }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "id",
                  "first_name",
                  "last_name",
                  "email",
                  "role",
                  "is_advisor",
                  "is_deleted",
                  "status"
                ],
                "filter": {}
              },
              "role": "auth0-hook"
            },
            {
              "permission": {
                "columns": [
                  "address_id",
                  "created_dtm",
                  "personnel_number",
                  "domiciled_site_id",
                  "email",
                  "end_date",
                  "first_name",
                  "id",
                  "is_deleted",
                  "is_advisor",
                  "last_name",
                  "phone_mobile",
                  "phone_work",
                  "primary_branch_id",
                  "region",
                  "division",
                  "start_date",
                  "status",
                  "title",
                  "title_family",
                  "updated_dtm",
                  "id_updated_dtm",
                  "role",
                  "user_code"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "address_id",
                  "created_dtm",
                  "personnel_number",
                  "domiciled_site_id",
                  "email",
                  "end_date",
                  "first_name",
                  "id",
                  "is_deleted",
                  "is_advisor",
                  "last_name",
                  "phone_mobile",
                  "phone_work",
                  "primary_branch_id",
                  "region",
                  "division",
                  "start_date",
                  "status",
                  "title",
                  "title_family",
                  "updated_dtm",
                  "id_updated_dtm",
                  "role",
                  "user_code"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "user", "schema": "sampling" },
          "update_permissions": [
            {
              "permission": {
                "check": {},
                "columns": [
                  "is_advisor",
                  "is_deleted",
                  "domiciled_site_id",
                  "email",
                  "first_name",
                  "last_name",
                  "phone_mobile",
                  "phone_work",
                  "status",
                  "title",
                  "title_family",
                  "end_date",
                  "start_date",
                  "personnel_number",
                  "region",
                  "division",
                  "role",
                  "user_code",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "address_id",
                  "id",
                  "primary_branch_id"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "user", "schema": "sampling" },
                    "_where": {
                      "_and": [
                        { "email": { "_eq": "x-hasura-user-email" } },
                        { "role": { "_in": ["ADMIN"] } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_advisor",
                  "is_deleted",
                  "domiciled_site_id",
                  "email",
                  "first_name",
                  "last_name",
                  "phone_mobile",
                  "phone_work",
                  "status",
                  "title",
                  "title_family",
                  "end_date",
                  "start_date",
                  "personnel_number",
                  "region",
                  "division",
                  "role",
                  "user_code",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "address_id",
                  "id",
                  "primary_branch_id"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "user", "schema": "sampling" },
                    "_where": {
                      "_and": [
                        { "email": { "_eq": "x-hasura-user-email" } },
                        { "role": { "_in": ["ADMIN"] } }
                      ]
                    }
                  }
                }
              },
              "role": "user"
            }
          ]
        },
        {
          "array_relationships": [
            {
              "name": "paddock_events",
              "using": {
                "foreign_key_constraint_on": {
                  "column": "variety_id",
                  "table": { "name": "paddock_event", "schema": "sampling" }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "crop",
              "using": { "foreign_key_constraint_on": "crop_id" }
            },
            {
              "name": "interpretation_service",
              "using": {
                "foreign_key_constraint_on": "interpretation_service_id"
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "crop_id",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "is_deleted",
                  "interpretation_service_code",
                  "interpretation_service_description",
                  "interpretation_service_external_id",
                  "name",
                  "created_dtm",
                  "updated_dtm",
                  "id_updated_dtm",
                  "crop_id",
                  "id",
                  "interpretation_service_id"
                ],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "variety", "schema": "sampling" }
        },
        { "table": { "name": "violin", "schema": "sampling" } }
      ]
    },
    {
      "configuration": {
        "connection_info": {
          "database_url": { "from_env": "SORDS_DB_URL" },
          "isolation_level": "read-committed",
          "pool_settings": { "connection_lifetime": 600 },
          "use_prepared_statements": false
        }
      },
      "kind": "postgres",
      "name": "sords",
      "tables": [
        {
          "configuration": {
            "column_config": {},
            "custom_column_names": {},
            "custom_name": "person_org_permissions",
            "custom_root_fields": {}
          },
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "role", "uci_id"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["party_id", "role", "uci_id"],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "person_organisation_role", "schema": "party" }
        },
        {
          "configuration": {
            "column_config": {},
            "custom_column_names": {},
            "custom_name": "person_account_permissions",
            "custom_root_fields": {}
          },
          "table": { "name": "person_permission", "schema": "party" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "id",
                  "status",
                  "status_code",
                  "status_reason",
                  "status_reason_code"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "id",
                  "status",
                  "status_code",
                  "status_reason",
                  "status_reason_code"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "customer_account", "schema": "sords" },
                    "_where": {
                      "_and": [
                        { "account_id": { "_ceq": ["$", "id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            }
          ],
          "table": { "name": "account_npay_eligibility", "schema": "sords" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "columns": ["branch_code", "branch_name"],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "columns": ["branch_code", "branch_name"],
                "filter": { "company_code": { "_eq": "X-Hasura-Company-Code" } }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": ["branch_code", "branch_name"],
                "filter": {}
              },
              "role": "user"
            }
          ],
          "table": { "name": "branch", "schema": "sords" }
        },
        {
          "array_relationships": [
            {
              "name": "organisation_parties",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "uci_id": "uci_id" },
                  "remote_table": {
                    "name": "person_organisation_role",
                    "schema": "party"
                  }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "account_finances",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "account_id": "account_id" },
                  "remote_table": {
                    "name": "customer_account_finance",
                    "schema": "sords"
                  }
                }
              }
            },
            {
              "name": "npayStatus",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "account_id": "id" },
                  "remote_table": {
                    "name": "account_npay_eligibility",
                    "schema": "sords"
                  }
                }
              }
            },
            {
              "name": "uci_organisation",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "uci_id": "uci_id" },
                  "remote_table": {
                    "name": "uci_organisation",
                    "schema": "sords"
                  }
                }
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "uci_id",
                  "account_email",
                  "name1",
                  "name2",
                  "npay_eligibility",
                  "account_type",
                  "account_subtype",
                  "account_id"
                ],
                "filter": {}
              },
              "role": "auth0-hook"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "account_id",
                  "uci_id",
                  "account_id_trimmed",
                  "npay_eligibility",
                  "abn",
                  "name1",
                  "name2",
                  "address_number",
                  "street",
                  "city",
                  "po_box",
                  "postal_code",
                  "region",
                  "country",
                  "telephone",
                  "account_email",
                  "domicile_branch_code",
                  "domicile_branch_name",
                  "nominated_account_id",
                  "account_type",
                  "account_subtype",
                  "customer_guid",
                  "update_dtm"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "account_id",
                  "uci_id",
                  "account_id_trimmed",
                  "npay_eligibility",
                  "abn",
                  "name1",
                  "name2",
                  "address_number",
                  "street",
                  "city",
                  "po_box",
                  "postal_code",
                  "region",
                  "country",
                  "telephone",
                  "account_email",
                  "domicile_branch_code",
                  "domicile_branch_name",
                  "nominated_account_id",
                  "account_type",
                  "account_subtype",
                  "customer_guid",
                  "update_dtm",
                  "company_code",
                  "account_classification"
                ],
                "filter": {
                  "_and": [
                    { "company_code": { "_eq": "X-Hasura-Company-Code" } },
                    {
                      "_or": [
                        { "account_classification": { "_is_null": true } },
                        { "account_classification": { "_nin": ["03", "04"] } }
                      ]
                    }
                  ]
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "account_id",
                  "uci_id",
                  "account_id_trimmed",
                  "npay_eligibility",
                  "nominated_account_id",
                  "account_email",
                  "abn",
                  "name1",
                  "name2",
                  "address_number",
                  "street",
                  "city",
                  "po_box",
                  "postal_code",
                  "region",
                  "country",
                  "telephone",
                  "domicile_branch_code",
                  "domicile_branch_name",
                  "account_type",
                  "account_subtype",
                  "customer_guid",
                  "update_dtm",
                  "company_code"
                ],
                "filter": {
                  "_or": [
                    {
                      "_exists": {
                        "_table": {
                          "name": "person_organisation_role",
                          "schema": "party"
                        },
                        "_where": {
                          "_and": [
                            { "party_id": { "_eq": "X-Hasura-User-Id" } },
                            {
                              "role": {
                                "_in": [
                                  "ORGANISATION_DELEGATE",
                                  "ORGANISATION_REPRESENTATIVE"
                                ]
                              }
                            },
                            { "uci_id": { "_ceq": ["$", "uci_id"] } }
                          ]
                        }
                      }
                    },
                    {
                      "_and": [
                        {
                          "_exists": {
                            "_table": {
                              "name": "person_organisation_role",
                              "schema": "party"
                            },
                            "_where": {
                              "_and": [
                                { "role": { "_in": ["ASSOCIATE"] } },
                                { "party_id": { "_eq": "X-Hasura-User-Id" } },
                                { "uci_id": { "_ceq": ["$", "uci_id"] } }
                              ]
                            }
                          }
                        },
                        {
                          "_exists": {
                            "_table": {
                              "name": "person_permission",
                              "schema": "party"
                            },
                            "_where": {
                              "_and": [
                                { "resource_type": { "_in": ["ACCOUNT"] } },
                                { "party_id": { "_eq": "X-Hasura-User-Id" } },
                                {
                                  "resource_id": { "_ceq": ["$", "account_id"] }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "customer_account", "schema": "sords" }
        },
        {
          "object_relationships": [
            {
              "name": "account_finances_all",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "account_id": "account_id" },
                  "remote_table": {
                    "name": "customer_account_finance",
                    "schema": "sords"
                  }
                }
              }
            }
          ],
          "table": { "name": "customer_account_all", "schema": "sords" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "columns": [
                  "account_id",
                  "nominated_account_id",
                  "account_type",
                  "is_nominated_account",
                  "is_prepay_account",
                  "is_finance_account",
                  "is_livestock_account",
                  "interest_calculation",
                  "total_receivables",
                  "available_credit",
                  "credit_limit",
                  "last_payment_amount",
                  "last_payment_date",
                  "limit_exceeded_date",
                  "next_review_date",
                  "change_date",
                  "process_date"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "columns": [
                  "account_id",
                  "nominated_account_id",
                  "account_type",
                  "is_nominated_account",
                  "is_prepay_account",
                  "is_finance_account",
                  "is_livestock_account",
                  "interest_calculation",
                  "total_receivables",
                  "available_credit",
                  "credit_limit",
                  "last_payment_amount",
                  "last_payment_date",
                  "limit_exceeded_date",
                  "next_review_date",
                  "change_date",
                  "process_date",
                  "account_classification"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "customer_account", "schema": "sords" },
                    "_where": {
                      "_and": [
                        { "account_id": { "_ceq": ["$", "account_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } },
                        {
                          "_or": [
                            { "account_classification": { "_is_null": true } },
                            {
                              "account_classification": { "_nin": ["03", "04"] }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "account_id",
                  "nominated_account_id",
                  "account_type",
                  "is_nominated_account",
                  "is_prepay_account",
                  "is_finance_account",
                  "is_livestock_account",
                  "interest_calculation",
                  "total_receivables",
                  "available_credit",
                  "credit_limit",
                  "last_payment_amount",
                  "last_payment_date",
                  "limit_exceeded_date",
                  "next_review_date",
                  "change_date",
                  "process_date"
                ],
                "filter": { "account_id": { "_in": "X-Hasura-Allowed-Ids" } }
              },
              "role": "user"
            }
          ],
          "table": { "name": "customer_account_finance", "schema": "sords" }
        },
        {
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "id",
                  "status",
                  "status_code",
                  "status_reason",
                  "status_reason_code",
                  "tc_accepted_date"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "id",
                  "status",
                  "status_code",
                  "status_reason",
                  "status_reason_code",
                  "tc_accepted_date"
                ],
                "filter": {}
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": ["id", "status", "status_code", "tc_accepted_date"],
                "filter": {
                  "_and": [
                    {
                      "_exists": {
                        "_table": {
                          "name": "person_organisation_role",
                          "schema": "party"
                        },
                        "_where": {
                          "_and": [
                            { "party_id": { "_eq": "X-Hasura-User-Id" } },
                            { "uci_id": { "_ceq": ["$", "id"] } }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "role": "user"
            }
          ],
          "table": {
            "name": "organisation_npay_eligibility",
            "schema": "sords"
          }
        },
        {
          "object_relationships": [
            {
              "name": "customer_account",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "account_id": "account_id" },
                  "remote_table": {
                    "name": "customer_account",
                    "schema": "sords"
                  }
                }
              }
            },
            {
              "name": "srch_organisation",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "uci_id": "uci_id" },
                  "remote_table": {
                    "name": "search_uci_organisation",
                    "schema": "sords"
                  }
                }
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "account_id",
                  "uci_id",
                  "company_code",
                  "name",
                  "account_search_index",
                  "npay_status_code",
                  "account_type",
                  "account_subtype",
                  "domicile_branch_code",
                  "account_classification"
                ],
                "filter": {
                  "_and": [
                    { "company_code": { "_eq": "X-Hasura-Company-Code" } },
                    {
                      "_or": [
                        { "account_classification": { "_is_null": true } },
                        { "account_classification": { "_nin": ["03", "04"] } }
                      ]
                    }
                  ]
                }
              },
              "role": "staff"
            }
          ],
          "table": { "name": "search_customer_account", "schema": "sords" }
        },
        {
          "array_relationships": [
            {
              "name": "srch_accounts",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "uci_id": "uci_id" },
                  "remote_table": {
                    "name": "search_customer_account",
                    "schema": "sords"
                  }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "organisation",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "uci_id": "uci_id" },
                  "remote_table": {
                    "name": "uci_organisation",
                    "schema": "sords"
                  }
                }
              }
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "uci_id",
                  "organisation_search_index",
                  "npay_status_code",
                  "npay_accepted_date"
                ],
                "filter": {
                  "srch_accounts": {
                    "company_code": { "_eq": "X-Hasura-Company-Code" }
                  }
                }
              },
              "role": "staff"
            }
          ],
          "table": { "name": "search_uci_organisation", "schema": "sords" }
        },
        {
          "array_relationships": [
            {
              "name": "accounts",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "uci_id": "uci_id" },
                  "remote_table": {
                    "name": "customer_account",
                    "schema": "sords"
                  }
                }
              }
            }
          ],
          "object_relationships": [
            {
              "name": "npayStatus",
              "using": {
                "manual_configuration": {
                  "column_mapping": { "uci_id": "id" },
                  "remote_table": {
                    "name": "organisation_npay_eligibility",
                    "schema": "sords"
                  }
                }
              }
            }
          ],
          "remote_relationships": [
            {
              "definition": {
                "to_source": {
                  "field_mapping": { "uci_id": "uci_id" },
                  "relationship_type": "array",
                  "source": "context",
                  "table": { "name": "uci_context", "schema": "context" }
                }
              },
              "name": "uci_organisation_uci_context"
            }
          ],
          "select_permissions": [
            {
              "permission": {
                "allow_aggregations": true,
                "columns": ["uci_id"],
                "filter": {}
              },
              "role": "auth0-hook"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "uci_id",
                  "uci_name",
                  "abn",
                  "acn",
                  "entity_name",
                  "entity_type",
                  "naspay_tc_date",
                  "npay_eligibility",
                  "bu_type",
                  "bpkind"
                ],
                "filter": {}
              },
              "role": "nutrien-services-m2m"
            },
            {
              "permission": {
                "allow_aggregations": true,
                "columns": [
                  "uci_id",
                  "uci_name",
                  "abn",
                  "acn",
                  "entity_name",
                  "entity_type",
                  "naspay_tc_date",
                  "npay_eligibility",
                  "bu_type",
                  "bpkind"
                ],
                "filter": {
                  "_exists": {
                    "_table": { "name": "customer_account", "schema": "sords" },
                    "_where": {
                      "_and": [
                        { "uci_id": { "_ceq": ["$", "uci_id"] } },
                        { "company_code": { "_eq": "X-Hasura-Company-Code" } }
                      ]
                    }
                  }
                }
              },
              "role": "staff"
            },
            {
              "permission": {
                "columns": [
                  "uci_id",
                  "uci_name",
                  "abn",
                  "acn",
                  "entity_name",
                  "entity_type",
                  "naspay_tc_date",
                  "npay_eligibility",
                  "bu_type",
                  "bpkind"
                ],
                "filter": {
                  "_exists": {
                    "_table": {
                      "name": "person_organisation_role",
                      "schema": "party"
                    },
                    "_where": {
                      "_and": [
                        { "party_id": { "_eq": "X-Hasura-User-Id" } },
                        { "uci_id": { "_ceq": ["$", "uci_id"] } }
                      ]
                    }
                  }
                }
              },
              "role": "user"
            }
          ],
          "table": { "name": "uci_organisation", "schema": "sords" }
        }
      ]
    }
  ],
  "version": 3
}
